{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-laughing/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css","path":"css/main_style.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css.map","path":"css/main_style.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css.map","path":"css/main_style.min.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css","path":"css/main_style.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.eot","path":"fonts/icon.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/sass/main_style.scss","path":"sass/main_style.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.woff","path":"fonts/icon.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.ttf","path":"fonts/icon.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.svg","path":"fonts/icon.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/LICENSE","path":"components/reset-css/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/README.md","path":"components/reset-css/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/gruntfile.js","path":"components/reset-css/gruntfile.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/package.json","path":"components/reset-css/package.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/main.scss","path":"components/reset-css/sass/main.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-native.scss","path":"components/reset-css/sass/mobile-native.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-single.scss","path":"components/reset-css/sass/mobile-single.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.min.css","path":"components/reset-css/dist/pc/reset.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css.map","path":"components/reset-css/public/main/reset.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css","path":"components/reset-css/public/main/reset.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.css","path":"components/reset-css/dist/pc/reset.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css.map","path":"components/reset-css/public/main/reset.min.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css.map","path":"components/reset-css/public/mobile/reset.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css","path":"components/reset-css/public/mobile/reset.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css","path":"components/reset-css/public/main/reset.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css","path":"components/reset-css/public/mobile/reset.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css.map","path":"components/reset-css/public/mobile/reset.min.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css.map","path":"components/reset-css/public/native/reset.min.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css.map","path":"components/reset-css/public/native/reset.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css","path":"components/reset-css/public/native/reset.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.css","path":"components/reset-css/dist/mobile/reset.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.min.css","path":"components/reset-css/dist/mobile/reset.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css","path":"components/reset-css/public/native/reset.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/imitation-native.scss","path":"components/reset-css/sass/custom/imitation-native.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/ie.scss","path":"components/reset-css/sass/reset/ie.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/macos.scss","path":"components/reset-css/sass/reset/macos.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/basic.scss","path":"components/reset-css/sass/reset/basic.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/mobile.scss","path":"components/reset-css/sass/reset/mobile.scss","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-laughing/.git","hash":"9671f110b7635b242544358dcc9f31b6f1dd6b8d","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/.gitignore","hash":"cbdea42ead12e6fd5e03d489e0482bbb37cd582b","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/.bowerrc","hash":"cd6df79a8be68d066ccb35c5470fba3e6f12bb00","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1502953334000},{"_id":"themes/hexo-theme-laughing/gruntfile.js","hash":"dce145bcbf831af91d778a0f05adf8ab3f648262","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/_config.yml","hash":"2617c42eea40aa22017ef5b1b03943e43c16ce60","modified":1503017288000},{"_id":"themes/hexo-theme-laughing/README.md","hash":"b7826b23f0c526cf23a92d9a99b89f61d07bf544","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1502884436000},{"_id":"source/_posts/hello-world.md","hash":"7d47c6b9fa782e8a02bd1dca3716797200337705","modified":1503025846000},{"_id":"source/_posts/mobile-terminal-dev.md","hash":"ca6d0223b1e478a80e3effa8db4ee1d213f03cad","modified":1503025552000},{"_id":"themes/hexo-theme-laughing/package.json","hash":"90437a166ff42fe162a7224078fdcd69de48b6cb","modified":1502884436000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1503024332000},{"_id":"source/_posts/js之闭包.md","hash":"a753c28e668bf8844277c0ed1e2313f9a02cdc2a","modified":1503025549000},{"_id":"themes/hexo-theme-laughing/layout/index.pug","hash":"342ec754890a8e4f037f4c47938a91468f4decee","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/layout/post.pug","hash":"fd10e59f17b02653b0e2faafaa0a98af134c7713","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/favicon.ico","hash":"3c779118c15f1734e08d83ec62d8e0d73c61339b","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/layout/_partial/footer.pug","hash":"73a26c2c5cedfe6ab7c31b7e58639e62d0c64bb0","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/layout/_partial/layout.pug","hash":"96f07d54e5712092ca41604abe0c0d3133837ad0","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/layout/_partial/pagination.pug","hash":"0622c7633acdeb16d51979e05e360a2b69b13495","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/layout/_partial/page_header.pug","hash":"6b46eae5f0a1db0c39d7a622a7acb3494f4de242","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/layout/_partial/post_header.pug","hash":"2470e6d75691be209f176716815b81347acb699d","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css","hash":"cbd0541a11ebd938d798e3cee397a5a4d26d84ec","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css.map","hash":"c3e624de8678bffa3d0859362382c86245015d1b","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css.map","hash":"b714707c0c6893720548709c52dc35e0e4ac5387","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css","hash":"7224d03577ecfa3cb51688ce5f0ef68d73166156","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.eot","hash":"845e74fd0134d11cb064e5440ae490c846670f2e","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/main_style.scss","hash":"898aefb75f72fed686ac9a60eff1ceb44a2f3ea3","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.woff","hash":"7d828283afa799b70a8531b9a2662c559b346439","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.ttf","hash":"c403df27000403dd4de7ffe2b4e80d04c4475a07","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.svg","hash":"b812a585d7dbb508874605a48436c77c8271e28b","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/.bower.json","hash":"870be6ad54cc1c5284d38b1cd104ac8412054498","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/README.md","hash":"42ba92ca71daff15d0e27ae9e1624e86298f88b8","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/.gitignore","hash":"dc763f22f9c31a8daefbf47989e76da901ffd47c","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/gruntfile.js","hash":"eda72e7747c8952dcc98d9249a5d8ca2279a89d6","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/package.json","hash":"c859e74c55d08e683d72ada52ad786f49eb19be2","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/layout.scss","hash":"32c191b0a510c387baa4ef85426eb13607e3c451","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/footer.scss","hash":"353e3e086aa70849c924fb8789b30b5a996d8676","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/duoshuo.scss","hash":"033b88d981fea35adad1b2ad96fbf5a497598cc3","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/main_navi.scss","hash":"068d1c8cf9af65c0258cf06e01305574629145ae","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/list.scss","hash":"ea845f4182a2979a3039a587cacff7fb170f5184","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/pagination.scss","hash":"6d26b9990bf957e06af87f36aafee1e3bdb505ef","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/navication.scss","hash":"08a01a3b4d627cff6b2521114378578625f779da","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/page_header.scss","hash":"628a2cdcf1093cfdf05b2c7e67f270d3bbea4fb4","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/post.scss","hash":"4f2a71a3a11896bb364fe3d51d32aa96e37b80d5","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/post_header.scss","hash":"dd790985f86f7a6af1a26baca50d8ec8fab14add","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/hightlight.scss","hash":"2be013af766705fcac2cbcb8058b5eed2a314550","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/icon.scss","hash":"f7a2f1adb843c211a4b526ba56565ad683902df1","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/color.scss","hash":"2dfaa41b7f960473b9c2a154989791f643737211","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/media.scss","hash":"7eb47453422b703af4a272f64b44a5e062f133ee","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/mixin.scss","hash":"37309124d68d74e1d920dae40546c6dfa53c4d86","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/main.scss","hash":"b34aeac5d981e3ac4c46a292e6197f2f7f860b32","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-native.scss","hash":"ce2116425e00aa7a450cfcd93c86f95213b7deed","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-single.scss","hash":"80c5c752656b61690e8df463e5b45b787621c249","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/_common.scss","hash":"e43ee0cc485b6e8ee11e33434dd8472e449f8804","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.min.css","hash":"d0e76dd5d95e95deee9c745438d8bf36b342081c","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css.map","hash":"af850e4c2b2ab129e8c419cdd3da8dc3190449ed","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css","hash":"8879756ab7e775eaf29e661503e4e472bde804d9","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.css","hash":"9ed2cbf6f1dd7df99849ad22700e9339914a358a","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css.map","hash":"8132d37d36c5b1d9826f9896dc61165229178c42","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css.map","hash":"a2ccb8da7fe8a22edcf91bf2171ebca67cb6c093","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css","hash":"f531c995853af9871b8be1c7c324a8f65d1c355a","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css","hash":"1a81aa7c066cf34dbc61709c9c11d2ef053ae456","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css","hash":"64fbf2a4717a88d31b9b85806f39ec8d3edfb538","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css.map","hash":"7a98495520ecb5d4badd36d6145d7b22f0a57c5b","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css.map","hash":"840a041a42aa45b3dafccaaeabf869076d7cc9de","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css.map","hash":"926d39cb34066c99e9ba3185926865b73c943288","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css","hash":"6cbf4e09d9f8f5fd2c6b961cf4f473c41a5cde48","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.css","hash":"c157f0c30827d47590cb99a25a34eb712ca1890a","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.min.css","hash":"752bcb20555fb6152867a7437aacf079f3c93c36","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/_microsoft-yahei.scss","hash":"4c29be667ae1decd0cc2da424e89c792b901eefe","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css","hash":"fa81cc36008bb69fefc9986d3e3c479d14ad3a09","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/imitation-native.scss","hash":"db910f6a7a008bc3c47a4ccebb0f9301b1dd6f58","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/ie.scss","hash":"032d5f6831a43ffe278b711331308a17b0fa0848","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/macos.scss","hash":"c4863f82e33f87dd4c724d68906a4cbe2b935e6c","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/basic.scss","hash":"523a6deffbd0699f3225adbdeda5d0fc5c6e1e4d","modified":1502884436000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/mobile.scss","hash":"391a7886de3256582d37a252f743a2cd08ae0964","modified":1502884436000},{"_id":"public/2017/08/18/hello-world/index.html","hash":"735709bb21af8b4f1c0c807450f6ff44fcfd1ae4","modified":1503025859386},{"_id":"public/archives/index.html","hash":"812014bd2ef2ca99a3c43653807684269850221b","modified":1503025859388},{"_id":"public/archives/2017/index.html","hash":"812014bd2ef2ca99a3c43653807684269850221b","modified":1503025859388},{"_id":"public/archives/2017/08/index.html","hash":"812014bd2ef2ca99a3c43653807684269850221b","modified":1503025859388},{"_id":"public/categories/杂记/index.html","hash":"cfb7f9263c7409aaeb49740f43c3f68b06379e5b","modified":1503025859389},{"_id":"public/categories/mobile/index.html","hash":"566ff4e0dd0e5bb1911733d784e18dc0b41e91e0","modified":1503025859389},{"_id":"public/categories/js/index.html","hash":"55646b7a3ab52c8fee73c1e3e9ee1f7640a7c7aa","modified":1503025859389},{"_id":"public/index.html","hash":"812014bd2ef2ca99a3c43653807684269850221b","modified":1503025859389},{"_id":"public/tags/随笔/index.html","hash":"cfb7f9263c7409aaeb49740f43c3f68b06379e5b","modified":1503025859389},{"_id":"public/tags/js/index.html","hash":"55646b7a3ab52c8fee73c1e3e9ee1f7640a7c7aa","modified":1503025859389},{"_id":"public/2017/08/18/mobile-terminal-dev/index.html","hash":"29d6909cd23ffd49e3d912fc247362754a88c4cf","modified":1503025859389},{"_id":"public/2017/08/17/js之闭包/index.html","hash":"26b451c73de33f43a144f4e6465e343d3f900830","modified":1503025859389},{"_id":"public/favicon.ico","hash":"3c779118c15f1734e08d83ec62d8e0d73c61339b","modified":1503025859399},{"_id":"public/css/main_style.css.map","hash":"c3e624de8678bffa3d0859362382c86245015d1b","modified":1503025859399},{"_id":"public/css/main_style.min.css.map","hash":"b714707c0c6893720548709c52dc35e0e4ac5387","modified":1503025859399},{"_id":"public/sass/main_style.scss","hash":"898aefb75f72fed686ac9a60eff1ceb44a2f3ea3","modified":1503025859399},{"_id":"public/fonts/icon.eot","hash":"845e74fd0134d11cb064e5440ae490c846670f2e","modified":1503025859399},{"_id":"public/fonts/icon.woff","hash":"7d828283afa799b70a8531b9a2662c559b346439","modified":1503025859400},{"_id":"public/fonts/icon.ttf","hash":"c403df27000403dd4de7ffe2b4e80d04c4475a07","modified":1503025859400},{"_id":"public/fonts/icon.svg","hash":"b812a585d7dbb508874605a48436c77c8271e28b","modified":1503025859400},{"_id":"public/components/reset-css/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1503025859400},{"_id":"public/components/reset-css/sass/main.scss","hash":"b34aeac5d981e3ac4c46a292e6197f2f7f860b32","modified":1503025859400},{"_id":"public/components/reset-css/sass/mobile-native.scss","hash":"ce2116425e00aa7a450cfcd93c86f95213b7deed","modified":1503025859400},{"_id":"public/components/reset-css/sass/mobile-single.scss","hash":"80c5c752656b61690e8df463e5b45b787621c249","modified":1503025859400},{"_id":"public/components/reset-css/public/main/reset.css.map","hash":"af850e4c2b2ab129e8c419cdd3da8dc3190449ed","modified":1503025859400},{"_id":"public/components/reset-css/public/main/reset.min.css.map","hash":"8132d37d36c5b1d9826f9896dc61165229178c42","modified":1503025859400},{"_id":"public/components/reset-css/public/mobile/reset.css.map","hash":"a2ccb8da7fe8a22edcf91bf2171ebca67cb6c093","modified":1503025859401},{"_id":"public/components/reset-css/public/mobile/reset.min.css.map","hash":"7a98495520ecb5d4badd36d6145d7b22f0a57c5b","modified":1503025859401},{"_id":"public/components/reset-css/public/native/reset.min.css.map","hash":"840a041a42aa45b3dafccaaeabf869076d7cc9de","modified":1503025859401},{"_id":"public/components/reset-css/public/native/reset.css.map","hash":"926d39cb34066c99e9ba3185926865b73c943288","modified":1503025859402},{"_id":"public/components/reset-css/sass/custom/imitation-native.scss","hash":"db910f6a7a008bc3c47a4ccebb0f9301b1dd6f58","modified":1503025859402},{"_id":"public/components/reset-css/sass/reset/ie.scss","hash":"032d5f6831a43ffe278b711331308a17b0fa0848","modified":1503025859402},{"_id":"public/components/reset-css/sass/reset/macos.scss","hash":"c4863f82e33f87dd4c724d68906a4cbe2b935e6c","modified":1503025859402},{"_id":"public/components/reset-css/sass/reset/basic.scss","hash":"523a6deffbd0699f3225adbdeda5d0fc5c6e1e4d","modified":1503025859402},{"_id":"public/components/reset-css/sass/reset/mobile.scss","hash":"391a7886de3256582d37a252f743a2cd08ae0964","modified":1503025859402},{"_id":"public/components/reset-css/README.html","hash":"8e6de58e63d6a04c3c1160409e17e7b255202704","modified":1503025859431},{"_id":"public/components/reset-css/gruntfile.js","hash":"eda72e7747c8952dcc98d9249a5d8ca2279a89d6","modified":1503025859431},{"_id":"public/components/reset-css/package.json","hash":"cafa376792f3516b399c2dff52f6de75fe5456e7","modified":1503025859431},{"_id":"public/components/reset-css/dist/pc/reset.min.css","hash":"d0e76dd5d95e95deee9c745438d8bf36b342081c","modified":1503025859431},{"_id":"public/components/reset-css/public/main/reset.css","hash":"8879756ab7e775eaf29e661503e4e472bde804d9","modified":1503025859431},{"_id":"public/components/reset-css/dist/pc/reset.css","hash":"9ed2cbf6f1dd7df99849ad22700e9339914a358a","modified":1503025859432},{"_id":"public/components/reset-css/public/mobile/reset.css","hash":"f531c995853af9871b8be1c7c324a8f65d1c355a","modified":1503025859432},{"_id":"public/components/reset-css/public/main/reset.min.css","hash":"1a81aa7c066cf34dbc61709c9c11d2ef053ae456","modified":1503025859432},{"_id":"public/components/reset-css/public/mobile/reset.min.css","hash":"64fbf2a4717a88d31b9b85806f39ec8d3edfb538","modified":1503025859432},{"_id":"public/components/reset-css/public/native/reset.css","hash":"6cbf4e09d9f8f5fd2c6b961cf4f473c41a5cde48","modified":1503025859432},{"_id":"public/components/reset-css/dist/mobile/reset.css","hash":"c157f0c30827d47590cb99a25a34eb712ca1890a","modified":1503025859432},{"_id":"public/components/reset-css/dist/mobile/reset.min.css","hash":"752bcb20555fb6152867a7437aacf079f3c93c36","modified":1503025859432},{"_id":"public/components/reset-css/public/native/reset.min.css","hash":"fa81cc36008bb69fefc9986d3e3c479d14ad3a09","modified":1503025859432},{"_id":"public/css/main_style.css","hash":"cbd0541a11ebd938d798e3cee397a5a4d26d84ec","modified":1503025859432},{"_id":"public/css/main_style.min.css","hash":"7224d03577ecfa3cb51688ce5f0ef68d73166156","modified":1503025859432}],"Category":[{"name":"杂记","_id":"cj6hase2h0002lzpf5iljzgpc"},{"name":"mobile","_id":"cj6hase2p0005lzpf3wd9w7ay"},{"name":"js","_id":"cj6hase2q0009lzpfpawthai7"}],"Data":[],"Page":[],"Post":[{"title":"诞生于狗善党的春天","time":"2017-08-16T02:50:58.000Z","_content":"\n# 阿一古 金社长~！！\n\n### 看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈 ，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\n### 因为这件事，起码得开心半个月！嘻嘻哈哈呼呼~~\n<!--more-->\n   \n   ![cmd-markdown-logo](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1502979972172&di=9f27f10470bd58853d7abe36c09c80ca&imgtype=0&src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20161229%2F813dcc3d6acd4415b11334a63dffe6c7.gif)\n   \n### 你开心啦！幸福的像花儿一样！\n\n ![cmd-markdown-logo](http://ww1.sinaimg.cn/bmiddle/005GsvR3gy1fimr4bdxnsg308w050hdt.gif)\n \n### 德善呐~你可长点心吧！\n\n\n ![cmd-markdown-logo](http://ww4.sinaimg.cn/bmiddle/005xZAeCgy1fimyc59doxg30b407a7wi.gif)\n \n\n\n ![cmd-markdown-logo](http://ww1.sinaimg.cn/bmiddle/a03bd7a0gy1fimotqdvkug209w05kx6r.gif)\n \n### 哈哈哈 ~~~~\n\n\n ![cmd-markdown-logo]( http://ww1.sinaimg.cn/bmiddle/749fa947gy1fimx2swaaqg209w05ke84.gif)\n \n###  公交车上狗焕表现不错！\n\n\n ![cmd-markdown-logo](http://wx1.sinaimg.cn/bmiddle/6208f82fgy1fimxyop869j20yi1ejaey.jpg)\n\n  \n### 每天早上醒来 阳光和你都在\n\n \n ![cmd-markdown-logo]( http://wx1.sinaimg.cn/large/005HpgfWgy1filodrsg11g30hs0a0x6r.gif)\n\n \n### happy ending ！！老夫的少女心呐！！\n\n\n\n##### and 今天**(2017.8.16)**也是本blog诞生的日子 科科~\n\n\n\n\n\n\n\n \n \n \n \n \n\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: 诞生于狗善党的春天\ntime : 2017-08-16 10:50:58\ntag: 随笔\ncategory: 杂记\n---\n\n# 阿一古 金社长~！！\n\n### 看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈 ，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\n### 因为这件事，起码得开心半个月！嘻嘻哈哈呼呼~~\n<!--more-->\n   \n   ![cmd-markdown-logo](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1502979972172&di=9f27f10470bd58853d7abe36c09c80ca&imgtype=0&src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20161229%2F813dcc3d6acd4415b11334a63dffe6c7.gif)\n   \n### 你开心啦！幸福的像花儿一样！\n\n ![cmd-markdown-logo](http://ww1.sinaimg.cn/bmiddle/005GsvR3gy1fimr4bdxnsg308w050hdt.gif)\n \n### 德善呐~你可长点心吧！\n\n\n ![cmd-markdown-logo](http://ww4.sinaimg.cn/bmiddle/005xZAeCgy1fimyc59doxg30b407a7wi.gif)\n \n\n\n ![cmd-markdown-logo](http://ww1.sinaimg.cn/bmiddle/a03bd7a0gy1fimotqdvkug209w05kx6r.gif)\n \n### 哈哈哈 ~~~~\n\n\n ![cmd-markdown-logo]( http://ww1.sinaimg.cn/bmiddle/749fa947gy1fimx2swaaqg209w05ke84.gif)\n \n###  公交车上狗焕表现不错！\n\n\n ![cmd-markdown-logo](http://wx1.sinaimg.cn/bmiddle/6208f82fgy1fimxyop869j20yi1ejaey.jpg)\n\n  \n### 每天早上醒来 阳光和你都在\n\n \n ![cmd-markdown-logo]( http://wx1.sinaimg.cn/large/005HpgfWgy1filodrsg11g30hs0a0x6r.gif)\n\n \n### happy ending ！！老夫的少女心呐！！\n\n\n\n##### and 今天**(2017.8.16)**也是本blog诞生的日子 科科~\n\n\n\n\n\n\n\n \n \n \n \n \n\n\n\n","slug":"hello-world","published":1,"date":"2017-08-18T02:45:32.000Z","updated":"2017-08-18T03:10:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hase230000lzpfts8oyp2y","content":"<h1 id=\"阿一古-金社长-！！\"><a href=\"#阿一古-金社长-！！\" class=\"headerlink\" title=\"阿一古 金社长~！！\"></a>阿一古 金社长~！！</h1><h3 id=\"看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈-，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\"><a href=\"#看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈-，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\" class=\"headerlink\" title=\"看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈 ，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\"></a>看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈 ，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！</h3><h3 id=\"因为这件事，起码得开心半个月！嘻嘻哈哈呼呼\"><a href=\"#因为这件事，起码得开心半个月！嘻嘻哈哈呼呼\" class=\"headerlink\" title=\"因为这件事，起码得开心半个月！嘻嘻哈哈呼呼~~\"></a>因为这件事，起码得开心半个月！嘻嘻哈哈呼呼~~</h3><a id=\"more\"></a>\n<p>   <img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1502979972172&amp;di=9f27f10470bd58853d7abe36c09c80ca&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20161229%2F813dcc3d6acd4415b11334a63dffe6c7.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"你开心啦！幸福的像花儿一样！\"><a href=\"#你开心啦！幸福的像花儿一样！\" class=\"headerlink\" title=\"你开心啦！幸福的像花儿一样！\"></a>你开心啦！幸福的像花儿一样！</h3><p> <img src=\"http://ww1.sinaimg.cn/bmiddle/005GsvR3gy1fimr4bdxnsg308w050hdt.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"德善呐-你可长点心吧！\"><a href=\"#德善呐-你可长点心吧！\" class=\"headerlink\" title=\"德善呐~你可长点心吧！\"></a>德善呐~你可长点心吧！</h3><p> <img src=\"http://ww4.sinaimg.cn/bmiddle/005xZAeCgy1fimyc59doxg30b407a7wi.gif\" alt=\"cmd-markdown-logo\"></p>\n<p> <img src=\"http://ww1.sinaimg.cn/bmiddle/a03bd7a0gy1fimotqdvkug209w05kx6r.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"哈哈哈\"><a href=\"#哈哈哈\" class=\"headerlink\" title=\"哈哈哈 ~~~~\"></a>哈哈哈 ~~~~</h3><p> <img src=\"http://ww1.sinaimg.cn/bmiddle/749fa947gy1fimx2swaaqg209w05ke84.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"公交车上狗焕表现不错！\"><a href=\"#公交车上狗焕表现不错！\" class=\"headerlink\" title=\"公交车上狗焕表现不错！\"></a>公交车上狗焕表现不错！</h3><p> <img src=\"http://wx1.sinaimg.cn/bmiddle/6208f82fgy1fimxyop869j20yi1ejaey.jpg\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"每天早上醒来-阳光和你都在\"><a href=\"#每天早上醒来-阳光和你都在\" class=\"headerlink\" title=\"每天早上醒来 阳光和你都在\"></a>每天早上醒来 阳光和你都在</h3><p> <img src=\"http://wx1.sinaimg.cn/large/005HpgfWgy1filodrsg11g30hs0a0x6r.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"happy-ending-！！老夫的少女心呐！！\"><a href=\"#happy-ending-！！老夫的少女心呐！！\" class=\"headerlink\" title=\"happy ending ！！老夫的少女心呐！！\"></a>happy ending ！！老夫的少女心呐！！</h3><h5 id=\"and-今天-2017-8-16-也是本blog诞生的日子-科科\"><a href=\"#and-今天-2017-8-16-也是本blog诞生的日子-科科\" class=\"headerlink\" title=\"and 今天(2017.8.16)也是本blog诞生的日子 科科~\"></a>and 今天<strong>(2017.8.16)</strong>也是本blog诞生的日子 科科~</h5>","site":{"data":{}},"excerpt":"<h1 id=\"阿一古-金社长-！！\"><a href=\"#阿一古-金社长-！！\" class=\"headerlink\" title=\"阿一古 金社长~！！\"></a>阿一古 金社长~！！</h1><h3 id=\"看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈-，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\"><a href=\"#看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈-，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\" class=\"headerlink\" title=\"看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈 ，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！\"></a>看到新闻的那一刻激动的不得了，很久没有这么开心的感觉了哈哈 ，心都快炸了！祝福祝福，没想到《请回答1988》售后服务这么好，终于圆满大结局了！欧耶！</h3><h3 id=\"因为这件事，起码得开心半个月！嘻嘻哈哈呼呼\"><a href=\"#因为这件事，起码得开心半个月！嘻嘻哈哈呼呼\" class=\"headerlink\" title=\"因为这件事，起码得开心半个月！嘻嘻哈哈呼呼~~\"></a>因为这件事，起码得开心半个月！嘻嘻哈哈呼呼~~</h3>","more":"<p>   <img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1502979972172&amp;di=9f27f10470bd58853d7abe36c09c80ca&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20161229%2F813dcc3d6acd4415b11334a63dffe6c7.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"你开心啦！幸福的像花儿一样！\"><a href=\"#你开心啦！幸福的像花儿一样！\" class=\"headerlink\" title=\"你开心啦！幸福的像花儿一样！\"></a>你开心啦！幸福的像花儿一样！</h3><p> <img src=\"http://ww1.sinaimg.cn/bmiddle/005GsvR3gy1fimr4bdxnsg308w050hdt.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"德善呐-你可长点心吧！\"><a href=\"#德善呐-你可长点心吧！\" class=\"headerlink\" title=\"德善呐~你可长点心吧！\"></a>德善呐~你可长点心吧！</h3><p> <img src=\"http://ww4.sinaimg.cn/bmiddle/005xZAeCgy1fimyc59doxg30b407a7wi.gif\" alt=\"cmd-markdown-logo\"></p>\n<p> <img src=\"http://ww1.sinaimg.cn/bmiddle/a03bd7a0gy1fimotqdvkug209w05kx6r.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"哈哈哈\"><a href=\"#哈哈哈\" class=\"headerlink\" title=\"哈哈哈 ~~~~\"></a>哈哈哈 ~~~~</h3><p> <img src=\"http://ww1.sinaimg.cn/bmiddle/749fa947gy1fimx2swaaqg209w05ke84.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"公交车上狗焕表现不错！\"><a href=\"#公交车上狗焕表现不错！\" class=\"headerlink\" title=\"公交车上狗焕表现不错！\"></a>公交车上狗焕表现不错！</h3><p> <img src=\"http://wx1.sinaimg.cn/bmiddle/6208f82fgy1fimxyop869j20yi1ejaey.jpg\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"每天早上醒来-阳光和你都在\"><a href=\"#每天早上醒来-阳光和你都在\" class=\"headerlink\" title=\"每天早上醒来 阳光和你都在\"></a>每天早上醒来 阳光和你都在</h3><p> <img src=\"http://wx1.sinaimg.cn/large/005HpgfWgy1filodrsg11g30hs0a0x6r.gif\" alt=\"cmd-markdown-logo\"></p>\n<h3 id=\"happy-ending-！！老夫的少女心呐！！\"><a href=\"#happy-ending-！！老夫的少女心呐！！\" class=\"headerlink\" title=\"happy ending ！！老夫的少女心呐！！\"></a>happy ending ！！老夫的少女心呐！！</h3><h5 id=\"and-今天-2017-8-16-也是本blog诞生的日子-科科\"><a href=\"#and-今天-2017-8-16-也是本blog诞生的日子-科科\" class=\"headerlink\" title=\"and 今天(2017.8.16)也是本blog诞生的日子 科科~\"></a>and 今天<strong>(2017.8.16)</strong>也是本blog诞生的日子 科科~</h5>"},{"title":"移动WEB前端开发常用资源","date":"2017-08-18T02:50:58.000Z","_content":"> #### [转]\n\n自己在移动开发中总结和收集的一些常用资源，分享给大家。\n\n<!--more-->\n\n## [](#meta篇 \"meta篇\")meta篇\n\n### [](#1-视窗宽度 \"1.视窗宽度\")1.视窗宽度\n```html\n<meta name=\"viewport\"content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"/>\n\n```\n其中 `width=device-width` 是设置视窗宽度为设备视窗宽度，还可以固定宽度，例如： `width=640` 则是640px的宽度（常见于微信）；\n\n`initial-scale=1.0` ：设置缩放比例为1.0；\n\n`minimum-scale=1.0` 和 `maximum-scale=1.0` ：最小缩放比例和最大缩放比例；\n\n`user-scalable=no` ：禁止用户自由缩放，`user-scalable` 默认值为 `yes` 。\n\n[ecko_icon alias=”fa-exclamation-triangle”] 提示：刚刚那个是带全部参数的，一般常用的，有 `user-scalable=no` 就不用使用 `minimum-scale=1.0` 和 `maximum-scale=1.0` 来强制禁止缩放了。\n\n```html\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no\"/>\n```\n\n### [](#2-自动识别格式 \"2.自动识别格式\")2.自动识别格式\n```\n<meta name=\"format-detection\" content=\"telephone=no\"/>\n```\n\n`content` 里面的参数：`telephone=no` 是禁止浏览器自动识别手机号码，`email=no` 是禁止浏览器自动识别Email。\n\n### [](#3-完整模板 \"3.完整模板\")3.完整模板\n```html\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no\"/>\n<meta name=\"format-detection\" content=\"telephone=no\"/>\n<meta name=\"format-detection\" content=\"email=no\"/>\n```\n\n## [](#CSS篇 \"CSS篇\")CSS篇\n\n```css\nbody {\n    font-family: \"Helvetica Neue\", Helvetica, STHeiTi, sans-serif; /*使用无衬线字体*/\n}\na, img {\n    -webkit-touch-callout: none; /*禁止长按链接与图片弹出菜单*/\n}\nhtml, body {\n    -webkit-user-select: none; /*禁止选中文本*/\n    user-select: none;\n}\nbutton,input,optgroup,select,textarea {\n    -webkit-appearance:none; /*去掉webkit默认的表单样式*/\n}\na,button,input,optgroup,select,textarea {\n    -webkit-tap-highlight-color:rgba(0,0,0,0); /*去掉a、input和button点击时的蓝色外边框和灰色半透明背景*/\n}\ninput::-webkit-input-placeholder {\n    color:#ccc; /*修改webkit中input的planceholder样式*/\n}\ninput:focus::-webkit-input-placeholder {\n    color:#f00; /*修改webkit中focus状态下input的planceholder样式*/\n}\nbody {\n    -webkit-text-size-adjust: 100%!important; /*禁止IOS调整字体大小*/\n}\ninput::-webkit-input-speech-button {\ndisplay: none; /*隐藏Android的语音输入按钮*/\n}\n```\n\n## [](#Flex基础篇 \"Flex基础篇\")Flex基础篇\n\n这里假设flex容器为 `.box` ，子元素为 `.item` 。\n\n### [](#1-定义容器为flex布局 \"1.定义容器为flex布局\")1.定义容器为flex布局\n```css\n.box{\n    display: -webkit-flex; /*webkit*/\n    display: flex;\n}\n/*行内flex*/\n.box{\n    display: -webkit-inline-flex; /*webkit*/\n    display:inline-flex;\n}\n\n```\n\n\n### [](#2-容器样式 \"2.容器样式\")2.容器样式\n```css\n.box{\n    flex-direction: row | row-reverse | column | column-reverse;\n    /*主轴方向：左到右（默认） | 右到左 | 上到下 | 下到上*/\n    flex-wrap: nowrap | wrap | wrap-reverse;\n    /*换行：不换行（默认） | 换行 | 换行并第一行在下方*/\n    flex-flow: <flex-direction> || <flex-wrap>;\n    /*主轴方向和换行简写*/\n    justify-content: flex-start | flex-end | center | space-between | space-around;\n    /*主轴对齐方式：左对齐（默认） | 右对齐 | 居中对齐 | 两端对齐 | 平均分布*/\n    align-items: flex-start | flex-end | center | baseline | stretch;\n    /*交叉轴对齐方式：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/\n    align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n    /*多主轴对齐：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 上下平均分布*/\n}\n```\n\n\n### [](#3-子元素样式 \"3.子元素样式\")3.子元素样式\n```css\n.item{\n    order: <integer>;\n    /*排序：数值越小，越排前，默认为0*/\n    flex-grow: <number>; /* default 0 */\n    /*放大：默认0（即如果有剩余空间也不放大，值为1则放大，2是1的双倍大小，以此类推）*/\n    flex-shrink: <number>; /* default 1 */\n    /*缩小：默认1（如果空间不足则会缩小，值为0不缩小）*/\n    flex-basis: <length> | auto; /* default auto */\n    /*固定大小：默认为0，可以设置px值，也可以设置百分比大小*/\n    flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n    /*flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto，*/\n    align-self: auto | flex-start | flex-end | center | baseline | stretch;\n    /*单独对齐方式：自动（默认） | 顶部对齐 | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/\n}\n```\n\n## [](#小技巧篇 \"小技巧篇\")小技巧篇\n\n### [](#1-自定义苹果图标 \"1.自定义苹果图标\")1.自定义苹果图标\n\n在网站文件根目录放一个 `apple-touch-icon.png` 文件，苹果设备保存网站为书签或桌面快捷方式时，就会使用这个文件作为图标，文件尺寸建议为：180px × 180px。\n\n### [](#2-自定义favicon \"2.自定义favicon\")2.自定义favicon\n```html\n<link rel=\"icon\" href=\"favicon.ico\" mce_href=\"favicon.ico\" type=\"image/x-icon\">\n\n```\n\n\n### [](#3-定义浏览器点击行为 \"3.定义浏览器点击行为\")3.定义浏览器点击行为\n```html\n<a href=\"tel:020-10086\">打电话给:020-10086</a>\n<a href=\"sms:10086\">发短信给: 10086</a>\n<a href=\"mailto:me@22278.club\">发送邮件: me@22278.club</a>\n\n```\n### [](#4-定义上传文件类型和格式 \"4.定义上传文件类型和格式\")4.定义上传文件类型和格式\n\n```html\n<input type=file accept=\"image/*\">\n```\n\n\n上面的文件上传框中，`accept` 可以限制上传文件的类型，参数为 `image/*` 是所有图片类型，点击会弹出图库，也可以指定图片格式，参数设置成 `image/png` 则可以限制图片类型为png；参数如果为 `video/*` 则是选择视频的意思；`accept` 还可以设置多个文件格式，语法为 `accept=&quot;image/gif, image/jpeg&quot;` ；\n\n### [](#5-使用box-shadow改变-挡住-表单自动填充后的黄色 \"5.使用box-shadow改变(挡住)表单自动填充后的黄色\")5.使用box-shadow改变(挡住)表单自动填充后的黄色\n```css\ninput:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill{box-shadow:inset 0 0 0 1000px #fff;\n}\n```\n\n\n### [](#6-用CSS实现省略号文字截断 \"6.用CSS实现省略号文字截断\")6.用CSS实现省略号文字截断\n```css\nwhite-space: nowrap;\ntext-overflow: ellipsis;\noverflow: hidden;\n```\n\n\n### [](#7-使用border绘制小三角 \"7.使用border绘制小三角\")7.使用border绘制小三角\n\n原理是：上下和左右的边框对接其实是个斜角，利用这个特性，使其中一边的边框透明，另外一边写成想要的颜色并隐藏对边，就可以变成小箭头形状。\n```css\nborder-width: 10px 10px 10px 0; //左箭头\nborder-color: transparent #fff;\nborder-style: solid;\nwidth: 0;\n```\n\nTootip写法：\n```html\n<!--html-->\n<div class=\"box\">嗨！点击菜单就可以关注兮兮公众号了哟~</div>\n```\n```css\n/*--css--*/\n.box{\n    position: relative;\n    padding: 0 20px;\n    width: 380px;\n    height: 80px;\n    border-radius: 8px;\n    background: #efefef;\n    font-size: 18px;\n    line-height: 80px;\n}\n.box:after{\n    position: absolute;\n    top: 50%;\n    left: -15px;\n    z-index: 1;\n    display: block;\n    margin-top: -15px;\n    width: 0;\n    border-color: transparent #efefef;\n    border-style: solid;\n    border-width: 15px 15px 15px 0;\n    content: \"\";\n}\n```\n\n\n\n> ##### [作者]：https://github.com/BoizZ\n\n\n","source":"_posts/mobile-terminal-dev.md","raw":"---\ntitle: 移动WEB前端开发常用资源\ndate: 2017-08-18 10:50:58\ntags:\ncategory : mobile\n---\n> #### [转]\n\n自己在移动开发中总结和收集的一些常用资源，分享给大家。\n\n<!--more-->\n\n## [](#meta篇 \"meta篇\")meta篇\n\n### [](#1-视窗宽度 \"1.视窗宽度\")1.视窗宽度\n```html\n<meta name=\"viewport\"content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"/>\n\n```\n其中 `width=device-width` 是设置视窗宽度为设备视窗宽度，还可以固定宽度，例如： `width=640` 则是640px的宽度（常见于微信）；\n\n`initial-scale=1.0` ：设置缩放比例为1.0；\n\n`minimum-scale=1.0` 和 `maximum-scale=1.0` ：最小缩放比例和最大缩放比例；\n\n`user-scalable=no` ：禁止用户自由缩放，`user-scalable` 默认值为 `yes` 。\n\n[ecko_icon alias=”fa-exclamation-triangle”] 提示：刚刚那个是带全部参数的，一般常用的，有 `user-scalable=no` 就不用使用 `minimum-scale=1.0` 和 `maximum-scale=1.0` 来强制禁止缩放了。\n\n```html\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no\"/>\n```\n\n### [](#2-自动识别格式 \"2.自动识别格式\")2.自动识别格式\n```\n<meta name=\"format-detection\" content=\"telephone=no\"/>\n```\n\n`content` 里面的参数：`telephone=no` 是禁止浏览器自动识别手机号码，`email=no` 是禁止浏览器自动识别Email。\n\n### [](#3-完整模板 \"3.完整模板\")3.完整模板\n```html\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no\"/>\n<meta name=\"format-detection\" content=\"telephone=no\"/>\n<meta name=\"format-detection\" content=\"email=no\"/>\n```\n\n## [](#CSS篇 \"CSS篇\")CSS篇\n\n```css\nbody {\n    font-family: \"Helvetica Neue\", Helvetica, STHeiTi, sans-serif; /*使用无衬线字体*/\n}\na, img {\n    -webkit-touch-callout: none; /*禁止长按链接与图片弹出菜单*/\n}\nhtml, body {\n    -webkit-user-select: none; /*禁止选中文本*/\n    user-select: none;\n}\nbutton,input,optgroup,select,textarea {\n    -webkit-appearance:none; /*去掉webkit默认的表单样式*/\n}\na,button,input,optgroup,select,textarea {\n    -webkit-tap-highlight-color:rgba(0,0,0,0); /*去掉a、input和button点击时的蓝色外边框和灰色半透明背景*/\n}\ninput::-webkit-input-placeholder {\n    color:#ccc; /*修改webkit中input的planceholder样式*/\n}\ninput:focus::-webkit-input-placeholder {\n    color:#f00; /*修改webkit中focus状态下input的planceholder样式*/\n}\nbody {\n    -webkit-text-size-adjust: 100%!important; /*禁止IOS调整字体大小*/\n}\ninput::-webkit-input-speech-button {\ndisplay: none; /*隐藏Android的语音输入按钮*/\n}\n```\n\n## [](#Flex基础篇 \"Flex基础篇\")Flex基础篇\n\n这里假设flex容器为 `.box` ，子元素为 `.item` 。\n\n### [](#1-定义容器为flex布局 \"1.定义容器为flex布局\")1.定义容器为flex布局\n```css\n.box{\n    display: -webkit-flex; /*webkit*/\n    display: flex;\n}\n/*行内flex*/\n.box{\n    display: -webkit-inline-flex; /*webkit*/\n    display:inline-flex;\n}\n\n```\n\n\n### [](#2-容器样式 \"2.容器样式\")2.容器样式\n```css\n.box{\n    flex-direction: row | row-reverse | column | column-reverse;\n    /*主轴方向：左到右（默认） | 右到左 | 上到下 | 下到上*/\n    flex-wrap: nowrap | wrap | wrap-reverse;\n    /*换行：不换行（默认） | 换行 | 换行并第一行在下方*/\n    flex-flow: <flex-direction> || <flex-wrap>;\n    /*主轴方向和换行简写*/\n    justify-content: flex-start | flex-end | center | space-between | space-around;\n    /*主轴对齐方式：左对齐（默认） | 右对齐 | 居中对齐 | 两端对齐 | 平均分布*/\n    align-items: flex-start | flex-end | center | baseline | stretch;\n    /*交叉轴对齐方式：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/\n    align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n    /*多主轴对齐：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 上下平均分布*/\n}\n```\n\n\n### [](#3-子元素样式 \"3.子元素样式\")3.子元素样式\n```css\n.item{\n    order: <integer>;\n    /*排序：数值越小，越排前，默认为0*/\n    flex-grow: <number>; /* default 0 */\n    /*放大：默认0（即如果有剩余空间也不放大，值为1则放大，2是1的双倍大小，以此类推）*/\n    flex-shrink: <number>; /* default 1 */\n    /*缩小：默认1（如果空间不足则会缩小，值为0不缩小）*/\n    flex-basis: <length> | auto; /* default auto */\n    /*固定大小：默认为0，可以设置px值，也可以设置百分比大小*/\n    flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n    /*flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto，*/\n    align-self: auto | flex-start | flex-end | center | baseline | stretch;\n    /*单独对齐方式：自动（默认） | 顶部对齐 | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/\n}\n```\n\n## [](#小技巧篇 \"小技巧篇\")小技巧篇\n\n### [](#1-自定义苹果图标 \"1.自定义苹果图标\")1.自定义苹果图标\n\n在网站文件根目录放一个 `apple-touch-icon.png` 文件，苹果设备保存网站为书签或桌面快捷方式时，就会使用这个文件作为图标，文件尺寸建议为：180px × 180px。\n\n### [](#2-自定义favicon \"2.自定义favicon\")2.自定义favicon\n```html\n<link rel=\"icon\" href=\"favicon.ico\" mce_href=\"favicon.ico\" type=\"image/x-icon\">\n\n```\n\n\n### [](#3-定义浏览器点击行为 \"3.定义浏览器点击行为\")3.定义浏览器点击行为\n```html\n<a href=\"tel:020-10086\">打电话给:020-10086</a>\n<a href=\"sms:10086\">发短信给: 10086</a>\n<a href=\"mailto:me@22278.club\">发送邮件: me@22278.club</a>\n\n```\n### [](#4-定义上传文件类型和格式 \"4.定义上传文件类型和格式\")4.定义上传文件类型和格式\n\n```html\n<input type=file accept=\"image/*\">\n```\n\n\n上面的文件上传框中，`accept` 可以限制上传文件的类型，参数为 `image/*` 是所有图片类型，点击会弹出图库，也可以指定图片格式，参数设置成 `image/png` 则可以限制图片类型为png；参数如果为 `video/*` 则是选择视频的意思；`accept` 还可以设置多个文件格式，语法为 `accept=&quot;image/gif, image/jpeg&quot;` ；\n\n### [](#5-使用box-shadow改变-挡住-表单自动填充后的黄色 \"5.使用box-shadow改变(挡住)表单自动填充后的黄色\")5.使用box-shadow改变(挡住)表单自动填充后的黄色\n```css\ninput:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill{box-shadow:inset 0 0 0 1000px #fff;\n}\n```\n\n\n### [](#6-用CSS实现省略号文字截断 \"6.用CSS实现省略号文字截断\")6.用CSS实现省略号文字截断\n```css\nwhite-space: nowrap;\ntext-overflow: ellipsis;\noverflow: hidden;\n```\n\n\n### [](#7-使用border绘制小三角 \"7.使用border绘制小三角\")7.使用border绘制小三角\n\n原理是：上下和左右的边框对接其实是个斜角，利用这个特性，使其中一边的边框透明，另外一边写成想要的颜色并隐藏对边，就可以变成小箭头形状。\n```css\nborder-width: 10px 10px 10px 0; //左箭头\nborder-color: transparent #fff;\nborder-style: solid;\nwidth: 0;\n```\n\nTootip写法：\n```html\n<!--html-->\n<div class=\"box\">嗨！点击菜单就可以关注兮兮公众号了哟~</div>\n```\n```css\n/*--css--*/\n.box{\n    position: relative;\n    padding: 0 20px;\n    width: 380px;\n    height: 80px;\n    border-radius: 8px;\n    background: #efefef;\n    font-size: 18px;\n    line-height: 80px;\n}\n.box:after{\n    position: absolute;\n    top: 50%;\n    left: -15px;\n    z-index: 1;\n    display: block;\n    margin-top: -15px;\n    width: 0;\n    border-color: transparent #efefef;\n    border-style: solid;\n    border-width: 15px 15px 15px 0;\n    content: \"\";\n}\n```\n\n\n\n> ##### [作者]：https://github.com/BoizZ\n\n\n","slug":"mobile-terminal-dev","published":1,"updated":"2017-08-18T03:05:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hase2e0001lzpfdl4tzel2","content":"<blockquote>\n<h4 id=\"转\"><a href=\"#转\" class=\"headerlink\" title=\"[转]\"></a>[转]</h4></blockquote>\n<p>自己在移动开发中总结和收集的一些常用资源，分享给大家。</p>\n<a id=\"more\"></a>\n<h2 id=\"meta篇\"><a href=\"#meta篇\" class=\"headerlink\" title=\"meta篇\"></a><a href=\"#meta篇\" title=\"meta篇\"></a>meta篇</h2><h3 id=\"1-视窗宽度\"><a href=\"#1-视窗宽度\" class=\"headerlink\" title=\"1.视窗宽度\"></a><a href=\"#1-视窗宽度\" title=\"1.视窗宽度\"></a>1.视窗宽度</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span><span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<p>其中 <code>width=device-width</code> 是设置视窗宽度为设备视窗宽度，还可以固定宽度，例如： <code>width=640</code> 则是640px的宽度（常见于微信）；</p>\n<p><code>initial-scale=1.0</code> ：设置缩放比例为1.0；</p>\n<p><code>minimum-scale=1.0</code> 和 <code>maximum-scale=1.0</code> ：最小缩放比例和最大缩放比例；</p>\n<p><code>user-scalable=no</code> ：禁止用户自由缩放，<code>user-scalable</code> 默认值为 <code>yes</code> 。</p>\n<p>[ecko_icon alias=”fa-exclamation-triangle”] 提示：刚刚那个是带全部参数的，一般常用的，有 <code>user-scalable=no</code> 就不用使用 <code>minimum-scale=1.0</code> 和 <code>maximum-scale=1.0</code> 来强制禁止缩放了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,user-scalable=no\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-自动识别格式\"><a href=\"#2-自动识别格式\" class=\"headerlink\" title=\"2.自动识别格式\"></a><a href=\"#2-自动识别格式\" title=\"2.自动识别格式\"></a>2.自动识别格式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;/&gt;</div></pre></td></tr></table></figure>\n<p><code>content</code> 里面的参数：<code>telephone=no</code> 是禁止浏览器自动识别手机号码，<code>email=no</code> 是禁止浏览器自动识别Email。</p>\n<h3 id=\"3-完整模板\"><a href=\"#3-完整模板\" class=\"headerlink\" title=\"3.完整模板\"></a><a href=\"#3-完整模板\" title=\"3.完整模板\"></a>3.完整模板</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,user-scalable=no\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"email=no\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"CSS篇\"><a href=\"#CSS篇\" class=\"headerlink\" title=\"CSS篇\"></a><a href=\"#CSS篇\" title=\"CSS篇\"></a>CSS篇</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Helvetica Neue\"</span>, Helvetica, STHeiTi, sans-serif; <span class=\"comment\">/*使用无衬线字体*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-tag\">img</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-touch-callout</span>: none; <span class=\"comment\">/*禁止长按链接与图片弹出菜单*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-user-select</span>: none; <span class=\"comment\">/*禁止选中文本*/</span></div><div class=\"line\">    <span class=\"attribute\">user-select</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">button</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">optgroup</span>,<span class=\"selector-tag\">select</span>,<span class=\"selector-tag\">textarea</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-appearance</span>:none; <span class=\"comment\">/*去掉webkit默认的表单样式*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">button</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">optgroup</span>,<span class=\"selector-tag\">select</span>,<span class=\"selector-tag\">textarea</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-tap-highlight-color</span>:<span class=\"built_in\">rgba</span>(0,0,0,0); <span class=\"comment\">/*去掉a、input和button点击时的蓝色外边框和灰色半透明背景*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">::-webkit-input-placeholder</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#ccc</span>; <span class=\"comment\">/*修改webkit中input的planceholder样式*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:focus</span><span class=\"selector-pseudo\">::-webkit-input-placeholder</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#f00</span>; <span class=\"comment\">/*修改webkit中focus状态下input的planceholder样式*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-text-size-adjust</span>: <span class=\"number\">100%</span><span class=\"meta\">!important</span>; <span class=\"comment\">/*禁止IOS调整字体大小*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">::-webkit-input-speech-button</span> &#123;</div><div class=\"line\"><span class=\"attribute\">display</span>: none; <span class=\"comment\">/*隐藏Android的语音输入按钮*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Flex基础篇\"><a href=\"#Flex基础篇\" class=\"headerlink\" title=\"Flex基础篇\"></a><a href=\"#Flex基础篇\" title=\"Flex基础篇\"></a>Flex基础篇</h2><p>这里假设flex容器为 <code>.box</code> ，子元素为 <code>.item</code> 。</p>\n<h3 id=\"1-定义容器为flex布局\"><a href=\"#1-定义容器为flex布局\" class=\"headerlink\" title=\"1.定义容器为flex布局\"></a><a href=\"#1-定义容器为flex布局\" title=\"1.定义容器为flex布局\"></a>1.定义容器为flex布局</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-flex; <span class=\"comment\">/*webkit*/</span></div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/*行内flex*/</span></div><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-inline-flex; <span class=\"comment\">/*webkit*/</span></div><div class=\"line\">    <span class=\"attribute\">display</span>:inline-flex;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-容器样式\"><a href=\"#2-容器样式\" class=\"headerlink\" title=\"2.容器样式\"></a><a href=\"#2-容器样式\" title=\"2.容器样式\"></a>2.容器样式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</div><div class=\"line\">    <span class=\"comment\">/*主轴方向：左到右（默认） | 右到左 | 上到下 | 下到上*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</div><div class=\"line\">    <span class=\"comment\">/*换行：不换行（默认） | 换行 | 换行并第一行在下方*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</div><div class=\"line\">    <span class=\"comment\">/*主轴方向和换行简写*/</span></div><div class=\"line\">    <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</div><div class=\"line\">    <span class=\"comment\">/*主轴对齐方式：左对齐（默认） | 右对齐 | 居中对齐 | 两端对齐 | 平均分布*/</span></div><div class=\"line\">    <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">    <span class=\"comment\">/*交叉轴对齐方式：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/</span></div><div class=\"line\">    <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class=\"line\">    <span class=\"comment\">/*多主轴对齐：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 上下平均分布*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-子元素样式\"><a href=\"#3-子元素样式\" class=\"headerlink\" title=\"3.子元素样式\"></a><a href=\"#3-子元素样式\" title=\"3.子元素样式\"></a>3.子元素样式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">order</span>: &lt;integer&gt;;</div><div class=\"line\">    <span class=\"comment\">/*排序：数值越小，越排前，默认为0*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-grow</span>: &lt;number&gt;; <span class=\"comment\">/* default 0 */</span></div><div class=\"line\">    <span class=\"comment\">/*放大：默认0（即如果有剩余空间也不放大，值为1则放大，2是1的双倍大小，以此类推）*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-shrink</span>: &lt;number&gt;; <span class=\"comment\">/* default 1 */</span></div><div class=\"line\">    <span class=\"comment\">/*缩小：默认1（如果空间不足则会缩小，值为0不缩小）*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-basis</span>: &lt;length&gt; | auto; <span class=\"comment\">/* default auto */</span></div><div class=\"line\">    <span class=\"comment\">/*固定大小：默认为0，可以设置px值，也可以设置百分比大小*/</span></div><div class=\"line\">    <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</div><div class=\"line\">    <span class=\"comment\">/*flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto，*/</span></div><div class=\"line\">    align-self: auto | flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">    <span class=\"comment\">/*单独对齐方式：自动（默认） | 顶部对齐 | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"小技巧篇\"><a href=\"#小技巧篇\" class=\"headerlink\" title=\"小技巧篇\"></a><a href=\"#小技巧篇\" title=\"小技巧篇\"></a>小技巧篇</h2><h3 id=\"1-自定义苹果图标\"><a href=\"#1-自定义苹果图标\" class=\"headerlink\" title=\"1.自定义苹果图标\"></a><a href=\"#1-自定义苹果图标\" title=\"1.自定义苹果图标\"></a>1.自定义苹果图标</h3><p>在网站文件根目录放一个 <code>apple-touch-icon.png</code> 文件，苹果设备保存网站为书签或桌面快捷方式时，就会使用这个文件作为图标，文件尺寸建议为：180px × 180px。</p>\n<h3 id=\"2-自定义favicon\"><a href=\"#2-自定义favicon\" class=\"headerlink\" title=\"2.自定义favicon\"></a><a href=\"#2-自定义favicon\" title=\"2.自定义favicon\"></a>2.自定义favicon</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"favicon.ico\"</span> <span class=\"attr\">mce_href</span>=<span class=\"string\">\"favicon.ico\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"image/x-icon\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-定义浏览器点击行为\"><a href=\"#3-定义浏览器点击行为\" class=\"headerlink\" title=\"3.定义浏览器点击行为\"></a><a href=\"#3-定义浏览器点击行为\" title=\"3.定义浏览器点击行为\"></a>3.定义浏览器点击行为</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"tel:020-10086\"</span>&gt;</span>打电话给:020-10086<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"sms:10086\"</span>&gt;</span>发短信给: 10086<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"mailto:me@22278.club\"</span>&gt;</span>发送邮件: me@22278.club<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-定义上传文件类型和格式\"><a href=\"#4-定义上传文件类型和格式\" class=\"headerlink\" title=\"4.定义上传文件类型和格式\"></a><a href=\"#4-定义上传文件类型和格式\" title=\"4.定义上传文件类型和格式\"></a>4.定义上传文件类型和格式</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">file</span> <span class=\"attr\">accept</span>=<span class=\"string\">\"image/*\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>上面的文件上传框中，<code>accept</code> 可以限制上传文件的类型，参数为 <code>image/*</code> 是所有图片类型，点击会弹出图库，也可以指定图片格式，参数设置成 <code>image/png</code> 则可以限制图片类型为png；参数如果为 <code>video/*</code> 则是选择视频的意思；<code>accept</code> 还可以设置多个文件格式，语法为 <code>accept=&amp;quot;image/gif, image/jpeg&amp;quot;</code> ；</p>\n<h3 id=\"5-使用box-shadow改变-挡住-表单自动填充后的黄色\"><a href=\"#5-使用box-shadow改变-挡住-表单自动填充后的黄色\" class=\"headerlink\" title=\"5.使用box-shadow改变(挡住)表单自动填充后的黄色\"></a><a href=\"#5-使用box-shadow改变-挡住-表单自动填充后的黄色\" title=\"5.使用box-shadow改变(挡住)表单自动填充后的黄色\"></a>5.使用box-shadow改变(挡住)表单自动填充后的黄色</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:-webkit-autofill</span>, <span class=\"selector-tag\">textarea</span><span class=\"selector-pseudo\">:-webkit-autofill</span>, <span class=\"selector-tag\">select</span><span class=\"selector-pseudo\">:-webkit-autofill</span>&#123;<span class=\"attribute\">box-shadow</span>:inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1000px</span> <span class=\"number\">#fff</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"6-用CSS实现省略号文字截断\"><a href=\"#6-用CSS实现省略号文字截断\" class=\"headerlink\" title=\"6.用CSS实现省略号文字截断\"></a><a href=\"#6-用CSS实现省略号文字截断\" title=\"6.用CSS实现省略号文字截断\"></a>6.用CSS实现省略号文字截断</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;</div><div class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;</div><div class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</div></pre></td></tr></table></figure>\n<h3 id=\"7-使用border绘制小三角\"><a href=\"#7-使用border绘制小三角\" class=\"headerlink\" title=\"7.使用border绘制小三角\"></a><a href=\"#7-使用border绘制小三角\" title=\"7.使用border绘制小三角\"></a>7.使用border绘制小三角</h3><p>原理是：上下和左右的边框对接其实是个斜角，利用这个特性，使其中一边的边框透明，另外一边写成想要的颜色并隐藏对边，就可以变成小箭头形状。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">border-width: 10px 10px 10px 0; //左箭头</div><div class=\"line\"><span class=\"selector-tag\">border-color</span>: <span class=\"selector-tag\">transparent</span> <span class=\"selector-id\">#fff</span>;</div><div class=\"line\"><span class=\"selector-tag\">border-style</span>: <span class=\"selector-tag\">solid</span>;</div><div class=\"line\"><span class=\"selector-tag\">width</span>: 0;</div></pre></td></tr></table></figure></p>\n<p>Tootip写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--html--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>嗨！点击菜单就可以关注兮兮公众号了哟~<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*--css--*/</span></div><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">380px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">8px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#efefef</span>;</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">80px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:after</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">15px</span>;</div><div class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">display</span>: block;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">15px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#efefef</span>;</div><div class=\"line\">    <span class=\"attribute\">border-style</span>: solid;</div><div class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">15px</span> <span class=\"number\">15px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<h5 id=\"作者-：https-github-com-BoizZ\"><a href=\"#作者-：https-github-com-BoizZ\" class=\"headerlink\" title=\"[作者]：https://github.com/BoizZ\"></a>[作者]：<a href=\"https://github.com/BoizZ\" target=\"_blank\" rel=\"external\">https://github.com/BoizZ</a></h5></blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<h4 id=\"转\"><a href=\"#转\" class=\"headerlink\" title=\"[转]\"></a>[转]</h4></blockquote>\n<p>自己在移动开发中总结和收集的一些常用资源，分享给大家。</p>","more":"<h2 id=\"meta篇\"><a href=\"#meta篇\" class=\"headerlink\" title=\"meta篇\"></a><a href=\"#meta篇\" title=\"meta篇\"></a>meta篇</h2><h3 id=\"1-视窗宽度\"><a href=\"#1-视窗宽度\" class=\"headerlink\" title=\"1.视窗宽度\"></a><a href=\"#1-视窗宽度\" title=\"1.视窗宽度\"></a>1.视窗宽度</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span><span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<p>其中 <code>width=device-width</code> 是设置视窗宽度为设备视窗宽度，还可以固定宽度，例如： <code>width=640</code> 则是640px的宽度（常见于微信）；</p>\n<p><code>initial-scale=1.0</code> ：设置缩放比例为1.0；</p>\n<p><code>minimum-scale=1.0</code> 和 <code>maximum-scale=1.0</code> ：最小缩放比例和最大缩放比例；</p>\n<p><code>user-scalable=no</code> ：禁止用户自由缩放，<code>user-scalable</code> 默认值为 <code>yes</code> 。</p>\n<p>[ecko_icon alias=”fa-exclamation-triangle”] 提示：刚刚那个是带全部参数的，一般常用的，有 <code>user-scalable=no</code> 就不用使用 <code>minimum-scale=1.0</code> 和 <code>maximum-scale=1.0</code> 来强制禁止缩放了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,user-scalable=no\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-自动识别格式\"><a href=\"#2-自动识别格式\" class=\"headerlink\" title=\"2.自动识别格式\"></a><a href=\"#2-自动识别格式\" title=\"2.自动识别格式\"></a>2.自动识别格式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;/&gt;</div></pre></td></tr></table></figure>\n<p><code>content</code> 里面的参数：<code>telephone=no</code> 是禁止浏览器自动识别手机号码，<code>email=no</code> 是禁止浏览器自动识别Email。</p>\n<h3 id=\"3-完整模板\"><a href=\"#3-完整模板\" class=\"headerlink\" title=\"3.完整模板\"></a><a href=\"#3-完整模板\" title=\"3.完整模板\"></a>3.完整模板</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0,user-scalable=no\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"email=no\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"CSS篇\"><a href=\"#CSS篇\" class=\"headerlink\" title=\"CSS篇\"></a><a href=\"#CSS篇\" title=\"CSS篇\"></a>CSS篇</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Helvetica Neue\"</span>, Helvetica, STHeiTi, sans-serif; <span class=\"comment\">/*使用无衬线字体*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-tag\">img</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-touch-callout</span>: none; <span class=\"comment\">/*禁止长按链接与图片弹出菜单*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-user-select</span>: none; <span class=\"comment\">/*禁止选中文本*/</span></div><div class=\"line\">    <span class=\"attribute\">user-select</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">button</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">optgroup</span>,<span class=\"selector-tag\">select</span>,<span class=\"selector-tag\">textarea</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-appearance</span>:none; <span class=\"comment\">/*去掉webkit默认的表单样式*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">button</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">optgroup</span>,<span class=\"selector-tag\">select</span>,<span class=\"selector-tag\">textarea</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-tap-highlight-color</span>:<span class=\"built_in\">rgba</span>(0,0,0,0); <span class=\"comment\">/*去掉a、input和button点击时的蓝色外边框和灰色半透明背景*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">::-webkit-input-placeholder</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#ccc</span>; <span class=\"comment\">/*修改webkit中input的planceholder样式*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:focus</span><span class=\"selector-pseudo\">::-webkit-input-placeholder</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#f00</span>; <span class=\"comment\">/*修改webkit中focus状态下input的planceholder样式*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-text-size-adjust</span>: <span class=\"number\">100%</span><span class=\"meta\">!important</span>; <span class=\"comment\">/*禁止IOS调整字体大小*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">::-webkit-input-speech-button</span> &#123;</div><div class=\"line\"><span class=\"attribute\">display</span>: none; <span class=\"comment\">/*隐藏Android的语音输入按钮*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Flex基础篇\"><a href=\"#Flex基础篇\" class=\"headerlink\" title=\"Flex基础篇\"></a><a href=\"#Flex基础篇\" title=\"Flex基础篇\"></a>Flex基础篇</h2><p>这里假设flex容器为 <code>.box</code> ，子元素为 <code>.item</code> 。</p>\n<h3 id=\"1-定义容器为flex布局\"><a href=\"#1-定义容器为flex布局\" class=\"headerlink\" title=\"1.定义容器为flex布局\"></a><a href=\"#1-定义容器为flex布局\" title=\"1.定义容器为flex布局\"></a>1.定义容器为flex布局</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-flex; <span class=\"comment\">/*webkit*/</span></div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/*行内flex*/</span></div><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-inline-flex; <span class=\"comment\">/*webkit*/</span></div><div class=\"line\">    <span class=\"attribute\">display</span>:inline-flex;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-容器样式\"><a href=\"#2-容器样式\" class=\"headerlink\" title=\"2.容器样式\"></a><a href=\"#2-容器样式\" title=\"2.容器样式\"></a>2.容器样式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</div><div class=\"line\">    <span class=\"comment\">/*主轴方向：左到右（默认） | 右到左 | 上到下 | 下到上*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</div><div class=\"line\">    <span class=\"comment\">/*换行：不换行（默认） | 换行 | 换行并第一行在下方*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</div><div class=\"line\">    <span class=\"comment\">/*主轴方向和换行简写*/</span></div><div class=\"line\">    <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</div><div class=\"line\">    <span class=\"comment\">/*主轴对齐方式：左对齐（默认） | 右对齐 | 居中对齐 | 两端对齐 | 平均分布*/</span></div><div class=\"line\">    <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">    <span class=\"comment\">/*交叉轴对齐方式：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/</span></div><div class=\"line\">    <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class=\"line\">    <span class=\"comment\">/*多主轴对齐：顶部对齐（默认） | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 上下平均分布*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-子元素样式\"><a href=\"#3-子元素样式\" class=\"headerlink\" title=\"3.子元素样式\"></a><a href=\"#3-子元素样式\" title=\"3.子元素样式\"></a>3.子元素样式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">order</span>: &lt;integer&gt;;</div><div class=\"line\">    <span class=\"comment\">/*排序：数值越小，越排前，默认为0*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-grow</span>: &lt;number&gt;; <span class=\"comment\">/* default 0 */</span></div><div class=\"line\">    <span class=\"comment\">/*放大：默认0（即如果有剩余空间也不放大，值为1则放大，2是1的双倍大小，以此类推）*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-shrink</span>: &lt;number&gt;; <span class=\"comment\">/* default 1 */</span></div><div class=\"line\">    <span class=\"comment\">/*缩小：默认1（如果空间不足则会缩小，值为0不缩小）*/</span></div><div class=\"line\">    <span class=\"attribute\">flex-basis</span>: &lt;length&gt; | auto; <span class=\"comment\">/* default auto */</span></div><div class=\"line\">    <span class=\"comment\">/*固定大小：默认为0，可以设置px值，也可以设置百分比大小*/</span></div><div class=\"line\">    <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</div><div class=\"line\">    <span class=\"comment\">/*flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto，*/</span></div><div class=\"line\">    align-self: auto | flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">    <span class=\"comment\">/*单独对齐方式：自动（默认） | 顶部对齐 | 底部对齐 | 居中对齐 | 上下对齐并铺满 | 文本基线对齐*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"小技巧篇\"><a href=\"#小技巧篇\" class=\"headerlink\" title=\"小技巧篇\"></a><a href=\"#小技巧篇\" title=\"小技巧篇\"></a>小技巧篇</h2><h3 id=\"1-自定义苹果图标\"><a href=\"#1-自定义苹果图标\" class=\"headerlink\" title=\"1.自定义苹果图标\"></a><a href=\"#1-自定义苹果图标\" title=\"1.自定义苹果图标\"></a>1.自定义苹果图标</h3><p>在网站文件根目录放一个 <code>apple-touch-icon.png</code> 文件，苹果设备保存网站为书签或桌面快捷方式时，就会使用这个文件作为图标，文件尺寸建议为：180px × 180px。</p>\n<h3 id=\"2-自定义favicon\"><a href=\"#2-自定义favicon\" class=\"headerlink\" title=\"2.自定义favicon\"></a><a href=\"#2-自定义favicon\" title=\"2.自定义favicon\"></a>2.自定义favicon</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"favicon.ico\"</span> <span class=\"attr\">mce_href</span>=<span class=\"string\">\"favicon.ico\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"image/x-icon\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-定义浏览器点击行为\"><a href=\"#3-定义浏览器点击行为\" class=\"headerlink\" title=\"3.定义浏览器点击行为\"></a><a href=\"#3-定义浏览器点击行为\" title=\"3.定义浏览器点击行为\"></a>3.定义浏览器点击行为</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"tel:020-10086\"</span>&gt;</span>打电话给:020-10086<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"sms:10086\"</span>&gt;</span>发短信给: 10086<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"mailto:me@22278.club\"</span>&gt;</span>发送邮件: me@22278.club<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-定义上传文件类型和格式\"><a href=\"#4-定义上传文件类型和格式\" class=\"headerlink\" title=\"4.定义上传文件类型和格式\"></a><a href=\"#4-定义上传文件类型和格式\" title=\"4.定义上传文件类型和格式\"></a>4.定义上传文件类型和格式</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">file</span> <span class=\"attr\">accept</span>=<span class=\"string\">\"image/*\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>上面的文件上传框中，<code>accept</code> 可以限制上传文件的类型，参数为 <code>image/*</code> 是所有图片类型，点击会弹出图库，也可以指定图片格式，参数设置成 <code>image/png</code> 则可以限制图片类型为png；参数如果为 <code>video/*</code> 则是选择视频的意思；<code>accept</code> 还可以设置多个文件格式，语法为 <code>accept=&amp;quot;image/gif, image/jpeg&amp;quot;</code> ；</p>\n<h3 id=\"5-使用box-shadow改变-挡住-表单自动填充后的黄色\"><a href=\"#5-使用box-shadow改变-挡住-表单自动填充后的黄色\" class=\"headerlink\" title=\"5.使用box-shadow改变(挡住)表单自动填充后的黄色\"></a><a href=\"#5-使用box-shadow改变-挡住-表单自动填充后的黄色\" title=\"5.使用box-shadow改变(挡住)表单自动填充后的黄色\"></a>5.使用box-shadow改变(挡住)表单自动填充后的黄色</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:-webkit-autofill</span>, <span class=\"selector-tag\">textarea</span><span class=\"selector-pseudo\">:-webkit-autofill</span>, <span class=\"selector-tag\">select</span><span class=\"selector-pseudo\">:-webkit-autofill</span>&#123;<span class=\"attribute\">box-shadow</span>:inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1000px</span> <span class=\"number\">#fff</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"6-用CSS实现省略号文字截断\"><a href=\"#6-用CSS实现省略号文字截断\" class=\"headerlink\" title=\"6.用CSS实现省略号文字截断\"></a><a href=\"#6-用CSS实现省略号文字截断\" title=\"6.用CSS实现省略号文字截断\"></a>6.用CSS实现省略号文字截断</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;</div><div class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;</div><div class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</div></pre></td></tr></table></figure>\n<h3 id=\"7-使用border绘制小三角\"><a href=\"#7-使用border绘制小三角\" class=\"headerlink\" title=\"7.使用border绘制小三角\"></a><a href=\"#7-使用border绘制小三角\" title=\"7.使用border绘制小三角\"></a>7.使用border绘制小三角</h3><p>原理是：上下和左右的边框对接其实是个斜角，利用这个特性，使其中一边的边框透明，另外一边写成想要的颜色并隐藏对边，就可以变成小箭头形状。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">border-width: 10px 10px 10px 0; //左箭头</div><div class=\"line\"><span class=\"selector-tag\">border-color</span>: <span class=\"selector-tag\">transparent</span> <span class=\"selector-id\">#fff</span>;</div><div class=\"line\"><span class=\"selector-tag\">border-style</span>: <span class=\"selector-tag\">solid</span>;</div><div class=\"line\"><span class=\"selector-tag\">width</span>: 0;</div></pre></td></tr></table></figure></p>\n<p>Tootip写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--html--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>嗨！点击菜单就可以关注兮兮公众号了哟~<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*--css--*/</span></div><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">380px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">8px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#efefef</span>;</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">80px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:after</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">15px</span>;</div><div class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">display</span>: block;</div><div class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">15px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#efefef</span>;</div><div class=\"line\">    <span class=\"attribute\">border-style</span>: solid;</div><div class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">15px</span> <span class=\"number\">15px</span> <span class=\"number\">15px</span> <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<h5 id=\"作者-：https-github-com-BoizZ\"><a href=\"#作者-：https-github-com-BoizZ\" class=\"headerlink\" title=\"[作者]：https://github.com/BoizZ\"></a>[作者]：<a href=\"https://github.com/BoizZ\" target=\"_blank\" rel=\"external\">https://github.com/BoizZ</a></h5></blockquote>"},{"title":"js之闭包","date":"2017-08-17T08:20:56.000Z","_content":"\n米福镇楼 科科^_^\n\n![米福镇楼](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1487524457&di=f1af0fb7bbdb7f4254d0627f7f61f772&imgtype=jpg&er=1&src=http%3A%2F%2Fi-7.vcimg.com%2Ftrim%2F0f279905008fbf08faa3f7b28346b042114295%2Ftrim.jpg)\n\n其实每个人对闭包理解的侧重点多少有点差异，有些人侧重在词法作用域问题，有些人侧重在变量保存问题，整体上都大同小异，这里简单说一下我对闭包的理解，希望能对你有一些启发。\n<!--more-->\n\n对闭包的理解基本可以分这几个点来思考：y\n> * 什么是闭包\n> * 闭包的基本形式\n> * 闭包的作用是什么\n\n### 一、什么是闭包\n**闭包就是把一块区域封装成一块独立的空间，从而内部的变量不受外部的污染**。\n\n我们都知道在js中，函数内部的局部变量遵从变量销毁机制（回收机制），即：**一个函数执行完毕之后，当再次调用该函数时，其内部的变量会被重新赋值，而不会保存上次函数执行后变量的值** 举个栗子：\n```\nfunction a(){\n    var b = 0;\n    console.log(++b);\n}\na(); // 1\na(); // 1  第二次调用a()结果还是1\n```\n第二次调用a()结果还是1，说明b被重新赋值了，没有保留上次执行时的结果\n\n也遵从作用域链的原则，即：**函数内的局部变量如果没有在所在作用域内找到变量的值，便会向其父级的作用域寻找变量的值（这里的作用域指词法作用域）。**再举个栗子：\n```\nfunction a() {\n\tvar b = 1\n\tfunction c(){\n\t    console.log(b);\n\t }\n\t c();\n}\na(); //  1   \n```\n 在ES6之前js中没有块级作用域的概念，所以一个function代表一个作用域，当函数c执行时在其内部没有找到b时，变向其上级作用域a()寻找。\n\n\n闭包从字面意思上来说就是把一个区域封存起来，形成一个密封的环境，那么既然是一个密封的环境，那么它之内的局部变量就是独立的，也就是说**闭包存在的目的是让函数不再遵守内存销毁机制。(划重点)**\n注：有人从函数执行在词法作用域而非执行时的作用域来理解闭包，可能会认为仍然在执行作用域链，这里存在争议，不过我还是举个例子反驳下吧 ，科科：\n```\nfunction a(){\n    var b = 1;\n    return function(){\n        b+=1;\n        console.log(b);\n    }\n}\nf = a();\nf(); // 2\nf(); // 3 \nf(); // 4\nf(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。\n```\n这里就一目了然了，**只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包**（这个例子下面也会用到 ）。\n\n\n### 二、闭包的基本形式\n**只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包**\n\n从这句话可以明白常见的闭包的基本形式为：\n　****两个函数相互嵌套，内层的函数被return出去，并且被保存在一个变量中，这样就创建了一个闭包。****例如：\n```\nfunction a(){\n    var b = 1;\n    return function c(){\n        b+=1;\n\t    console.log(b);\n    }\n}\nf = a();\nf(); // 2\nf(); // 3 \nf(); // 4\nf(); // 5    \n.\n.     \n```\n这是闭包的较为常见的基本样式，至于其它立即执行函数等样式的闭包，其实也都是这种方式的转变，下面将会讲到。\n\n### 三、闭包应用中的作用\n\n> * 外部作用域获取内部作用域变量的值\n> * 保存内部变量的值到一个独立的环境中\n\n在实际的js应用中，用闭包干的事挺多的，这两种是比较常见的，就这两种来给大家讲一下自己的理解。\n##### 1）外部作用域获取内部作用域变量的值\n在正常的作用域链中，（如果不理解什么是作用域链，可以再去看看红宝书）内部作用域可以访问外部作用域中变量，而外部不可以拿到内部的变量，但闭包却可以实现在外部获取内部变量的值，举个栗子：\n```\nfunction a() {\n\tvar c = 1;\n\treturn function b() {\n\t\tconsole.log(c);\n\t}\n}\nvar d = a();\nd(); // 1  执行外部的函数d便获得了作用域a中的变量\n```\n例子中执行外部的函数d便获得了内部作用域a中的变量，这便是闭包的作用之一。\n\n##### 2） 保存内部变量的值到一个独立的环境中\n由上文中我们可知，函数的内部变量遵循作用域销毁机制，当函数再次被调用时，内部变量会被重新赋值，然而有时候我们并不想让这个局部变量被重新赋值，那么这时候变用到了闭包，下面我用两个例子来说明这个问题。\n\n例子1：\n\n```\n//使用闭包前\nfunction a(){\n\tvar b = 1;\n\tb+=1;\n\tconsole.log(b);\n}　\na(); // 2\na(); // 2 \na(); // 2\na(); // 2      无论多少次调用结果都为2 ，说明变量所占内存被回收\n.\n.\n.     \n```\n使用闭包前：无论多少次调用结果都为2 ，说明变量所占内存被回收。\n```\n//使用闭包后\nfunction a(){\n    var b = 1;\n    return function(){\n        b+=1;\n\t    console.log(b);\n    }\n}\nf = a();\nf(); // 2\nf(); // 3 \nf(); // 4\nf(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。\n.\n.     \n```\n使用闭包后：这里f形成了一个独立的作用域封装b，b不再受回收机制的限制，形成闭包。\n\n例子2：\n```\n//使用闭包前\nvar arr = [];\nfor(var i=0;i<8;i++){\n    arr[i] = function(){\n        console.log(i);\n    }\n}\narr[0]() ; // 8\narr[1]() ;// 8\narr[2]() ;// 8    每次结果都为8 \n..\n```\n使用闭包前，每次调用的结果都为8，原因很简单，就是在for循环执行一遍时，里面的函数并没有执行；而当在外面调用的时候，for循环已经执行完毕，此时的i始终为8。\n```\n//使用闭包后\nvar arr = [];\nfor(var i=0;i<8;i++){\n    (function(i){\n        arr[i] = function(){\n            console.log(i);\n        }\n    })(i)\n}\narr[0](); //0\narr[1](); //1\narr[2](); //2\n...\narr[7](); //7\n```\n使用闭包后，此时已经把要`return`出去的`function(){  console.log(i); }`直接赋值给了外部的变量arr，如果看不懂的话换成另外的写法或许就好理解了：\n```\nvar arr = [];\nfor(var i=0;i<8;i++){\n    arr[i] = (function(i){\n        return function(){\n            console.log(i);\n        }\n    })(i)\n}\n```\n再进一步改写：\n```\nvar arr = [];\nfunction a(i){\n    return function(){\n        console.log(i);\n    }\n}\nfor(var i=0;i<8;i++){\n    arr[i] = a(i);\n}\n```\n此时一目了然，这也就是我们常说的`立即执行函数（IIFE）`中的闭包。\n\n闭包使用需谨慎，变量一直存在于全局变量中（内存）中，有可能造成内存泄露等问题，别问我怎么知道的... 囧。\n\n#### -END-","source":"_posts/js之闭包.md","raw":"---\ntitle: js之闭包\ndate: 2017-08-17 16:20:56\ntag: js\ncategory: js\n\n---\n\n米福镇楼 科科^_^\n\n![米福镇楼](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1487524457&di=f1af0fb7bbdb7f4254d0627f7f61f772&imgtype=jpg&er=1&src=http%3A%2F%2Fi-7.vcimg.com%2Ftrim%2F0f279905008fbf08faa3f7b28346b042114295%2Ftrim.jpg)\n\n其实每个人对闭包理解的侧重点多少有点差异，有些人侧重在词法作用域问题，有些人侧重在变量保存问题，整体上都大同小异，这里简单说一下我对闭包的理解，希望能对你有一些启发。\n<!--more-->\n\n对闭包的理解基本可以分这几个点来思考：y\n> * 什么是闭包\n> * 闭包的基本形式\n> * 闭包的作用是什么\n\n### 一、什么是闭包\n**闭包就是把一块区域封装成一块独立的空间，从而内部的变量不受外部的污染**。\n\n我们都知道在js中，函数内部的局部变量遵从变量销毁机制（回收机制），即：**一个函数执行完毕之后，当再次调用该函数时，其内部的变量会被重新赋值，而不会保存上次函数执行后变量的值** 举个栗子：\n```\nfunction a(){\n    var b = 0;\n    console.log(++b);\n}\na(); // 1\na(); // 1  第二次调用a()结果还是1\n```\n第二次调用a()结果还是1，说明b被重新赋值了，没有保留上次执行时的结果\n\n也遵从作用域链的原则，即：**函数内的局部变量如果没有在所在作用域内找到变量的值，便会向其父级的作用域寻找变量的值（这里的作用域指词法作用域）。**再举个栗子：\n```\nfunction a() {\n\tvar b = 1\n\tfunction c(){\n\t    console.log(b);\n\t }\n\t c();\n}\na(); //  1   \n```\n 在ES6之前js中没有块级作用域的概念，所以一个function代表一个作用域，当函数c执行时在其内部没有找到b时，变向其上级作用域a()寻找。\n\n\n闭包从字面意思上来说就是把一个区域封存起来，形成一个密封的环境，那么既然是一个密封的环境，那么它之内的局部变量就是独立的，也就是说**闭包存在的目的是让函数不再遵守内存销毁机制。(划重点)**\n注：有人从函数执行在词法作用域而非执行时的作用域来理解闭包，可能会认为仍然在执行作用域链，这里存在争议，不过我还是举个例子反驳下吧 ，科科：\n```\nfunction a(){\n    var b = 1;\n    return function(){\n        b+=1;\n        console.log(b);\n    }\n}\nf = a();\nf(); // 2\nf(); // 3 \nf(); // 4\nf(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。\n```\n这里就一目了然了，**只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包**（这个例子下面也会用到 ）。\n\n\n### 二、闭包的基本形式\n**只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包**\n\n从这句话可以明白常见的闭包的基本形式为：\n　****两个函数相互嵌套，内层的函数被return出去，并且被保存在一个变量中，这样就创建了一个闭包。****例如：\n```\nfunction a(){\n    var b = 1;\n    return function c(){\n        b+=1;\n\t    console.log(b);\n    }\n}\nf = a();\nf(); // 2\nf(); // 3 \nf(); // 4\nf(); // 5    \n.\n.     \n```\n这是闭包的较为常见的基本样式，至于其它立即执行函数等样式的闭包，其实也都是这种方式的转变，下面将会讲到。\n\n### 三、闭包应用中的作用\n\n> * 外部作用域获取内部作用域变量的值\n> * 保存内部变量的值到一个独立的环境中\n\n在实际的js应用中，用闭包干的事挺多的，这两种是比较常见的，就这两种来给大家讲一下自己的理解。\n##### 1）外部作用域获取内部作用域变量的值\n在正常的作用域链中，（如果不理解什么是作用域链，可以再去看看红宝书）内部作用域可以访问外部作用域中变量，而外部不可以拿到内部的变量，但闭包却可以实现在外部获取内部变量的值，举个栗子：\n```\nfunction a() {\n\tvar c = 1;\n\treturn function b() {\n\t\tconsole.log(c);\n\t}\n}\nvar d = a();\nd(); // 1  执行外部的函数d便获得了作用域a中的变量\n```\n例子中执行外部的函数d便获得了内部作用域a中的变量，这便是闭包的作用之一。\n\n##### 2） 保存内部变量的值到一个独立的环境中\n由上文中我们可知，函数的内部变量遵循作用域销毁机制，当函数再次被调用时，内部变量会被重新赋值，然而有时候我们并不想让这个局部变量被重新赋值，那么这时候变用到了闭包，下面我用两个例子来说明这个问题。\n\n例子1：\n\n```\n//使用闭包前\nfunction a(){\n\tvar b = 1;\n\tb+=1;\n\tconsole.log(b);\n}　\na(); // 2\na(); // 2 \na(); // 2\na(); // 2      无论多少次调用结果都为2 ，说明变量所占内存被回收\n.\n.\n.     \n```\n使用闭包前：无论多少次调用结果都为2 ，说明变量所占内存被回收。\n```\n//使用闭包后\nfunction a(){\n    var b = 1;\n    return function(){\n        b+=1;\n\t    console.log(b);\n    }\n}\nf = a();\nf(); // 2\nf(); // 3 \nf(); // 4\nf(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。\n.\n.     \n```\n使用闭包后：这里f形成了一个独立的作用域封装b，b不再受回收机制的限制，形成闭包。\n\n例子2：\n```\n//使用闭包前\nvar arr = [];\nfor(var i=0;i<8;i++){\n    arr[i] = function(){\n        console.log(i);\n    }\n}\narr[0]() ; // 8\narr[1]() ;// 8\narr[2]() ;// 8    每次结果都为8 \n..\n```\n使用闭包前，每次调用的结果都为8，原因很简单，就是在for循环执行一遍时，里面的函数并没有执行；而当在外面调用的时候，for循环已经执行完毕，此时的i始终为8。\n```\n//使用闭包后\nvar arr = [];\nfor(var i=0;i<8;i++){\n    (function(i){\n        arr[i] = function(){\n            console.log(i);\n        }\n    })(i)\n}\narr[0](); //0\narr[1](); //1\narr[2](); //2\n...\narr[7](); //7\n```\n使用闭包后，此时已经把要`return`出去的`function(){  console.log(i); }`直接赋值给了外部的变量arr，如果看不懂的话换成另外的写法或许就好理解了：\n```\nvar arr = [];\nfor(var i=0;i<8;i++){\n    arr[i] = (function(i){\n        return function(){\n            console.log(i);\n        }\n    })(i)\n}\n```\n再进一步改写：\n```\nvar arr = [];\nfunction a(i){\n    return function(){\n        console.log(i);\n    }\n}\nfor(var i=0;i<8;i++){\n    arr[i] = a(i);\n}\n```\n此时一目了然，这也就是我们常说的`立即执行函数（IIFE）`中的闭包。\n\n闭包使用需谨慎，变量一直存在于全局变量中（内存）中，有可能造成内存泄露等问题，别问我怎么知道的... 囧。\n\n#### -END-","slug":"js之闭包","published":1,"updated":"2017-08-18T03:05:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hase2l0004lzpfh10nfvt5","content":"<p>米福镇楼 科科^_^</p>\n<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1487524457&amp;di=f1af0fb7bbdb7f4254d0627f7f61f772&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fi-7.vcimg.com%2Ftrim%2F0f279905008fbf08faa3f7b28346b042114295%2Ftrim.jpg\" alt=\"米福镇楼\"></p>\n<p>其实每个人对闭包理解的侧重点多少有点差异，有些人侧重在词法作用域问题，有些人侧重在变量保存问题，整体上都大同小异，这里简单说一下我对闭包的理解，希望能对你有一些启发。<br><a id=\"more\"></a></p>\n<p>对闭包的理解基本可以分这几个点来思考：y</p>\n<blockquote>\n<ul>\n<li>什么是闭包</li>\n<li>闭包的基本形式</li>\n<li>闭包的作用是什么</li>\n</ul>\n</blockquote>\n<h3 id=\"一、什么是闭包\"><a href=\"#一、什么是闭包\" class=\"headerlink\" title=\"一、什么是闭包\"></a>一、什么是闭包</h3><p><strong>闭包就是把一块区域封装成一块独立的空间，从而内部的变量不受外部的污染</strong>。</p>\n<p>我们都知道在js中，函数内部的局部变量遵从变量销毁机制（回收机制），即：<strong>一个函数执行完毕之后，当再次调用该函数时，其内部的变量会被重新赋值，而不会保存上次函数执行后变量的值</strong> 举个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 0;</div><div class=\"line\">    console.log(++b);</div><div class=\"line\">&#125;</div><div class=\"line\">a(); // 1</div><div class=\"line\">a(); // 1  第二次调用a()结果还是1</div></pre></td></tr></table></figure></p>\n<p>第二次调用a()结果还是1，说明b被重新赋值了，没有保留上次执行时的结果</p>\n<p>也遵从作用域链的原则，即：<strong>函数内的局部变量如果没有在所在作用域内找到变量的值，便会向其父级的作用域寻找变量的值（这里的作用域指词法作用域）。</strong>再举个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a() &#123;</div><div class=\"line\">\tvar b = 1</div><div class=\"line\">\tfunction c()&#123;</div><div class=\"line\">\t    console.log(b);</div><div class=\"line\">\t &#125;</div><div class=\"line\">\t c();</div><div class=\"line\">&#125;</div><div class=\"line\">a(); //  1</div></pre></td></tr></table></figure></p>\n<p> 在ES6之前js中没有块级作用域的概念，所以一个function代表一个作用域，当函数c执行时在其内部没有找到b时，变向其上级作用域a()寻找。</p>\n<p>闭包从字面意思上来说就是把一个区域封存起来，形成一个密封的环境，那么既然是一个密封的环境，那么它之内的局部变量就是独立的，也就是说<strong>闭包存在的目的是让函数不再遵守内存销毁机制。(划重点)</strong><br>注：有人从函数执行在词法作用域而非执行时的作用域来理解闭包，可能会认为仍然在执行作用域链，这里存在争议，不过我还是举个例子反驳下吧 ，科科：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 1;</div><div class=\"line\">    return function()&#123;</div><div class=\"line\">        b+=1;</div><div class=\"line\">        console.log(b);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">f = a();</div><div class=\"line\">f(); // 2</div><div class=\"line\">f(); // 3 </div><div class=\"line\">f(); // 4</div><div class=\"line\">f(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。</div></pre></td></tr></table></figure></p>\n<p>这里就一目了然了，<strong>只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包</strong>（这个例子下面也会用到 ）。</p>\n<h3 id=\"二、闭包的基本形式\"><a href=\"#二、闭包的基本形式\" class=\"headerlink\" title=\"二、闭包的基本形式\"></a>二、闭包的基本形式</h3><p><strong>只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包</strong></p>\n<p>从这句话可以明白常见的闭包的基本形式为：<br>　<strong><strong>两个函数相互嵌套，内层的函数被return出去，并且被保存在一个变量中，这样就创建了一个闭包。</strong></strong>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 1;</div><div class=\"line\">    return function c()&#123;</div><div class=\"line\">        b+=1;</div><div class=\"line\">\t    console.log(b);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">f = a();</div><div class=\"line\">f(); // 2</div><div class=\"line\">f(); // 3 </div><div class=\"line\">f(); // 4</div><div class=\"line\">f(); // 5    </div><div class=\"line\">.</div><div class=\"line\">.</div></pre></td></tr></table></figure></p>\n<p>这是闭包的较为常见的基本样式，至于其它立即执行函数等样式的闭包，其实也都是这种方式的转变，下面将会讲到。</p>\n<h3 id=\"三、闭包应用中的作用\"><a href=\"#三、闭包应用中的作用\" class=\"headerlink\" title=\"三、闭包应用中的作用\"></a>三、闭包应用中的作用</h3><blockquote>\n<ul>\n<li>外部作用域获取内部作用域变量的值</li>\n<li>保存内部变量的值到一个独立的环境中</li>\n</ul>\n</blockquote>\n<p>在实际的js应用中，用闭包干的事挺多的，这两种是比较常见的，就这两种来给大家讲一下自己的理解。</p>\n<h5 id=\"1）外部作用域获取内部作用域变量的值\"><a href=\"#1）外部作用域获取内部作用域变量的值\" class=\"headerlink\" title=\"1）外部作用域获取内部作用域变量的值\"></a>1）外部作用域获取内部作用域变量的值</h5><p>在正常的作用域链中，（如果不理解什么是作用域链，可以再去看看红宝书）内部作用域可以访问外部作用域中变量，而外部不可以拿到内部的变量，但闭包却可以实现在外部获取内部变量的值，举个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a() &#123;</div><div class=\"line\">\tvar c = 1;</div><div class=\"line\">\treturn function b() &#123;</div><div class=\"line\">\t\tconsole.log(c);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">var d = a();</div><div class=\"line\">d(); // 1  执行外部的函数d便获得了作用域a中的变量</div></pre></td></tr></table></figure></p>\n<p>例子中执行外部的函数d便获得了内部作用域a中的变量，这便是闭包的作用之一。</p>\n<h5 id=\"2）-保存内部变量的值到一个独立的环境中\"><a href=\"#2）-保存内部变量的值到一个独立的环境中\" class=\"headerlink\" title=\"2） 保存内部变量的值到一个独立的环境中\"></a>2） 保存内部变量的值到一个独立的环境中</h5><p>由上文中我们可知，函数的内部变量遵循作用域销毁机制，当函数再次被调用时，内部变量会被重新赋值，然而有时候我们并不想让这个局部变量被重新赋值，那么这时候变用到了闭包，下面我用两个例子来说明这个问题。</p>\n<p>例子1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包前</div><div class=\"line\">function a()&#123;</div><div class=\"line\">\tvar b = 1;</div><div class=\"line\">\tb+=1;</div><div class=\"line\">\tconsole.log(b);</div><div class=\"line\">&#125;　</div><div class=\"line\">a(); // 2</div><div class=\"line\">a(); // 2 </div><div class=\"line\">a(); // 2</div><div class=\"line\">a(); // 2      无论多少次调用结果都为2 ，说明变量所占内存被回收</div><div class=\"line\">.</div><div class=\"line\">.</div><div class=\"line\">.</div></pre></td></tr></table></figure>\n<p>使用闭包前：无论多少次调用结果都为2 ，说明变量所占内存被回收。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包后</div><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 1;</div><div class=\"line\">    return function()&#123;</div><div class=\"line\">        b+=1;</div><div class=\"line\">\t    console.log(b);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">f = a();</div><div class=\"line\">f(); // 2</div><div class=\"line\">f(); // 3 </div><div class=\"line\">f(); // 4</div><div class=\"line\">f(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。</div><div class=\"line\">.</div><div class=\"line\">.</div></pre></td></tr></table></figure></p>\n<p>使用闭包后：这里f形成了一个独立的作用域封装b，b不再受回收机制的限制，形成闭包。</p>\n<p>例子2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包前</div><div class=\"line\">var arr = [];</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    arr[i] = function()&#123;</div><div class=\"line\">        console.log(i);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">arr[0]() ; // 8</div><div class=\"line\">arr[1]() ;// 8</div><div class=\"line\">arr[2]() ;// 8    每次结果都为8 </div><div class=\"line\">..</div></pre></td></tr></table></figure></p>\n<p>使用闭包前，每次调用的结果都为8，原因很简单，就是在for循环执行一遍时，里面的函数并没有执行；而当在外面调用的时候，for循环已经执行完毕，此时的i始终为8。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包后</div><div class=\"line\">var arr = [];</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    (function(i)&#123;</div><div class=\"line\">        arr[i] = function()&#123;</div><div class=\"line\">            console.log(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)(i)</div><div class=\"line\">&#125;</div><div class=\"line\">arr[0](); //0</div><div class=\"line\">arr[1](); //1</div><div class=\"line\">arr[2](); //2</div><div class=\"line\">...</div><div class=\"line\">arr[7](); //7</div></pre></td></tr></table></figure></p>\n<p>使用闭包后，此时已经把要<code>return</code>出去的<code>function(){  console.log(i); }</code>直接赋值给了外部的变量arr，如果看不懂的话换成另外的写法或许就好理解了：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var arr = [];</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    arr[i] = (function(i)&#123;</div><div class=\"line\">        return function()&#123;</div><div class=\"line\">            console.log(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)(i)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>再进一步改写：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var arr = [];</div><div class=\"line\">function a(i)&#123;</div><div class=\"line\">    return function()&#123;</div><div class=\"line\">        console.log(i);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    arr[i] = a(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>此时一目了然，这也就是我们常说的<code>立即执行函数（IIFE）</code>中的闭包。</p>\n<p>闭包使用需谨慎，变量一直存在于全局变量中（内存）中，有可能造成内存泄露等问题，别问我怎么知道的… 囧。</p>\n<h4 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"-END-\"></a>-END-</h4>","site":{"data":{}},"excerpt":"<p>米福镇楼 科科^_^</p>\n<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1487524457&amp;di=f1af0fb7bbdb7f4254d0627f7f61f772&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fi-7.vcimg.com%2Ftrim%2F0f279905008fbf08faa3f7b28346b042114295%2Ftrim.jpg\" alt=\"米福镇楼\"></p>\n<p>其实每个人对闭包理解的侧重点多少有点差异，有些人侧重在词法作用域问题，有些人侧重在变量保存问题，整体上都大同小异，这里简单说一下我对闭包的理解，希望能对你有一些启发。<br>","more":"</p>\n<p>对闭包的理解基本可以分这几个点来思考：y</p>\n<blockquote>\n<ul>\n<li>什么是闭包</li>\n<li>闭包的基本形式</li>\n<li>闭包的作用是什么</li>\n</ul>\n</blockquote>\n<h3 id=\"一、什么是闭包\"><a href=\"#一、什么是闭包\" class=\"headerlink\" title=\"一、什么是闭包\"></a>一、什么是闭包</h3><p><strong>闭包就是把一块区域封装成一块独立的空间，从而内部的变量不受外部的污染</strong>。</p>\n<p>我们都知道在js中，函数内部的局部变量遵从变量销毁机制（回收机制），即：<strong>一个函数执行完毕之后，当再次调用该函数时，其内部的变量会被重新赋值，而不会保存上次函数执行后变量的值</strong> 举个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 0;</div><div class=\"line\">    console.log(++b);</div><div class=\"line\">&#125;</div><div class=\"line\">a(); // 1</div><div class=\"line\">a(); // 1  第二次调用a()结果还是1</div></pre></td></tr></table></figure></p>\n<p>第二次调用a()结果还是1，说明b被重新赋值了，没有保留上次执行时的结果</p>\n<p>也遵从作用域链的原则，即：<strong>函数内的局部变量如果没有在所在作用域内找到变量的值，便会向其父级的作用域寻找变量的值（这里的作用域指词法作用域）。</strong>再举个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a() &#123;</div><div class=\"line\">\tvar b = 1</div><div class=\"line\">\tfunction c()&#123;</div><div class=\"line\">\t    console.log(b);</div><div class=\"line\">\t &#125;</div><div class=\"line\">\t c();</div><div class=\"line\">&#125;</div><div class=\"line\">a(); //  1</div></pre></td></tr></table></figure></p>\n<p> 在ES6之前js中没有块级作用域的概念，所以一个function代表一个作用域，当函数c执行时在其内部没有找到b时，变向其上级作用域a()寻找。</p>\n<p>闭包从字面意思上来说就是把一个区域封存起来，形成一个密封的环境，那么既然是一个密封的环境，那么它之内的局部变量就是独立的，也就是说<strong>闭包存在的目的是让函数不再遵守内存销毁机制。(划重点)</strong><br>注：有人从函数执行在词法作用域而非执行时的作用域来理解闭包，可能会认为仍然在执行作用域链，这里存在争议，不过我还是举个例子反驳下吧 ，科科：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 1;</div><div class=\"line\">    return function()&#123;</div><div class=\"line\">        b+=1;</div><div class=\"line\">        console.log(b);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">f = a();</div><div class=\"line\">f(); // 2</div><div class=\"line\">f(); // 3 </div><div class=\"line\">f(); // 4</div><div class=\"line\">f(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。</div></pre></td></tr></table></figure></p>\n<p>这里就一目了然了，<strong>只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包</strong>（这个例子下面也会用到 ）。</p>\n<h3 id=\"二、闭包的基本形式\"><a href=\"#二、闭包的基本形式\" class=\"headerlink\" title=\"二、闭包的基本形式\"></a>二、闭包的基本形式</h3><p><strong>只有当return出去的变量，被保存成全局变量时才不会被销毁，也才形成闭包，其它的情况有可能不是闭包</strong></p>\n<p>从这句话可以明白常见的闭包的基本形式为：<br>　<strong><strong>两个函数相互嵌套，内层的函数被return出去，并且被保存在一个变量中，这样就创建了一个闭包。</strong></strong>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 1;</div><div class=\"line\">    return function c()&#123;</div><div class=\"line\">        b+=1;</div><div class=\"line\">\t    console.log(b);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">f = a();</div><div class=\"line\">f(); // 2</div><div class=\"line\">f(); // 3 </div><div class=\"line\">f(); // 4</div><div class=\"line\">f(); // 5    </div><div class=\"line\">.</div><div class=\"line\">.</div></pre></td></tr></table></figure></p>\n<p>这是闭包的较为常见的基本样式，至于其它立即执行函数等样式的闭包，其实也都是这种方式的转变，下面将会讲到。</p>\n<h3 id=\"三、闭包应用中的作用\"><a href=\"#三、闭包应用中的作用\" class=\"headerlink\" title=\"三、闭包应用中的作用\"></a>三、闭包应用中的作用</h3><blockquote>\n<ul>\n<li>外部作用域获取内部作用域变量的值</li>\n<li>保存内部变量的值到一个独立的环境中</li>\n</ul>\n</blockquote>\n<p>在实际的js应用中，用闭包干的事挺多的，这两种是比较常见的，就这两种来给大家讲一下自己的理解。</p>\n<h5 id=\"1）外部作用域获取内部作用域变量的值\"><a href=\"#1）外部作用域获取内部作用域变量的值\" class=\"headerlink\" title=\"1）外部作用域获取内部作用域变量的值\"></a>1）外部作用域获取内部作用域变量的值</h5><p>在正常的作用域链中，（如果不理解什么是作用域链，可以再去看看红宝书）内部作用域可以访问外部作用域中变量，而外部不可以拿到内部的变量，但闭包却可以实现在外部获取内部变量的值，举个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">function a() &#123;</div><div class=\"line\">\tvar c = 1;</div><div class=\"line\">\treturn function b() &#123;</div><div class=\"line\">\t\tconsole.log(c);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">var d = a();</div><div class=\"line\">d(); // 1  执行外部的函数d便获得了作用域a中的变量</div></pre></td></tr></table></figure></p>\n<p>例子中执行外部的函数d便获得了内部作用域a中的变量，这便是闭包的作用之一。</p>\n<h5 id=\"2）-保存内部变量的值到一个独立的环境中\"><a href=\"#2）-保存内部变量的值到一个独立的环境中\" class=\"headerlink\" title=\"2） 保存内部变量的值到一个独立的环境中\"></a>2） 保存内部变量的值到一个独立的环境中</h5><p>由上文中我们可知，函数的内部变量遵循作用域销毁机制，当函数再次被调用时，内部变量会被重新赋值，然而有时候我们并不想让这个局部变量被重新赋值，那么这时候变用到了闭包，下面我用两个例子来说明这个问题。</p>\n<p>例子1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包前</div><div class=\"line\">function a()&#123;</div><div class=\"line\">\tvar b = 1;</div><div class=\"line\">\tb+=1;</div><div class=\"line\">\tconsole.log(b);</div><div class=\"line\">&#125;　</div><div class=\"line\">a(); // 2</div><div class=\"line\">a(); // 2 </div><div class=\"line\">a(); // 2</div><div class=\"line\">a(); // 2      无论多少次调用结果都为2 ，说明变量所占内存被回收</div><div class=\"line\">.</div><div class=\"line\">.</div><div class=\"line\">.</div></pre></td></tr></table></figure>\n<p>使用闭包前：无论多少次调用结果都为2 ，说明变量所占内存被回收。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包后</div><div class=\"line\">function a()&#123;</div><div class=\"line\">    var b = 1;</div><div class=\"line\">    return function()&#123;</div><div class=\"line\">        b+=1;</div><div class=\"line\">\t    console.log(b);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">f = a();</div><div class=\"line\">f(); // 2</div><div class=\"line\">f(); // 3 </div><div class=\"line\">f(); // 4</div><div class=\"line\">f(); // 5      这里f形成了一个独立的作用域封装b，b不再收回收机制的限制，形成闭包。</div><div class=\"line\">.</div><div class=\"line\">.</div></pre></td></tr></table></figure></p>\n<p>使用闭包后：这里f形成了一个独立的作用域封装b，b不再受回收机制的限制，形成闭包。</p>\n<p>例子2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包前</div><div class=\"line\">var arr = [];</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    arr[i] = function()&#123;</div><div class=\"line\">        console.log(i);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">arr[0]() ; // 8</div><div class=\"line\">arr[1]() ;// 8</div><div class=\"line\">arr[2]() ;// 8    每次结果都为8 </div><div class=\"line\">..</div></pre></td></tr></table></figure></p>\n<p>使用闭包前，每次调用的结果都为8，原因很简单，就是在for循环执行一遍时，里面的函数并没有执行；而当在外面调用的时候，for循环已经执行完毕，此时的i始终为8。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用闭包后</div><div class=\"line\">var arr = [];</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    (function(i)&#123;</div><div class=\"line\">        arr[i] = function()&#123;</div><div class=\"line\">            console.log(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)(i)</div><div class=\"line\">&#125;</div><div class=\"line\">arr[0](); //0</div><div class=\"line\">arr[1](); //1</div><div class=\"line\">arr[2](); //2</div><div class=\"line\">...</div><div class=\"line\">arr[7](); //7</div></pre></td></tr></table></figure></p>\n<p>使用闭包后，此时已经把要<code>return</code>出去的<code>function(){  console.log(i); }</code>直接赋值给了外部的变量arr，如果看不懂的话换成另外的写法或许就好理解了：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var arr = [];</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    arr[i] = (function(i)&#123;</div><div class=\"line\">        return function()&#123;</div><div class=\"line\">            console.log(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)(i)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>再进一步改写：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var arr = [];</div><div class=\"line\">function a(i)&#123;</div><div class=\"line\">    return function()&#123;</div><div class=\"line\">        console.log(i);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">for(var i=0;i&lt;8;i++)&#123;</div><div class=\"line\">    arr[i] = a(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>此时一目了然，这也就是我们常说的<code>立即执行函数（IIFE）</code>中的闭包。</p>\n<p>闭包使用需谨慎，变量一直存在于全局变量中（内存）中，有可能造成内存泄露等问题，别问我怎么知道的… 囧。</p>\n<h4 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"-END-\"></a>-END-</h4>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj6hase230000lzpfts8oyp2y","category_id":"cj6hase2h0002lzpf5iljzgpc","_id":"cj6hase2q0008lzpfx6tmblob"},{"post_id":"cj6hase2e0001lzpfdl4tzel2","category_id":"cj6hase2p0005lzpf3wd9w7ay","_id":"cj6hase2r000blzpf8dpncoa5"},{"post_id":"cj6hase2l0004lzpfh10nfvt5","category_id":"cj6hase2q0009lzpfpawthai7","_id":"cj6hase2r000clzpftbx2wweu"}],"PostTag":[{"post_id":"cj6hase230000lzpfts8oyp2y","tag_id":"cj6hase2k0003lzpfj1jjfvou","_id":"cj6hase2q0007lzpfikkhbv6n"},{"post_id":"cj6hase2l0004lzpfh10nfvt5","tag_id":"cj6hase2p0006lzpf5ifercle","_id":"cj6hase2r000alzpfakpsnxif"}],"Tag":[{"name":"随笔","_id":"cj6hase2k0003lzpfj1jjfvou"},{"name":"js","_id":"cj6hase2p0006lzpf5ifercle"}]}}